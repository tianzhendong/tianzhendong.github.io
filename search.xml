<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="posts/4a17b156.html"/>
      <url>posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>dll生成与使用</title>
      <link href="posts/fbf11e59.html"/>
      <url>posts/fbf11e59.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[toc]</p><h1 id="DLL生成与使用-Clion、Visual-Studio、QT-Creator"><a href="#DLL生成与使用-Clion、Visual-Studio、QT-Creator" class="headerlink" title="DLL生成与使用(Clion、Visual Studio、QT Creator)"></a>DLL生成与使用(Clion、Visual Studio、QT Creator)</h1><h2 id="DLL概述"><a href="#DLL概述" class="headerlink" title="DLL概述"></a>DLL概述</h2><p>本节内容<a href="https://blog.csdn.net/elaine_bao/article/details/51784864?spm=1001.2101.3001.6650.6&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-6.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-6.pc_relevant_default&amp;utm_relevant_index=12">来自博客</a></p><p>它们是一些独立的文件，其中包含能被可执行程序或其他dll调用来完成某项工作的函数，只有在其他模块调用dll中的函数时，dll才发挥作用。</p><p>在实际编程中，我们可以把完成某项功能的函数放在一个动态链接库里，然后提供给其他程序调用。像Windows API中所有的函数都包含在dll中，如Kernel32.dll, User32.dll, GDI32.dll等。那么dll究竟有什么好处呢？</p><h3 id="静态库和动态库"><a href="#静态库和动态库" class="headerlink" title="静态库和动态库"></a>静态库和动态库</h3><h4 id="静态库"><a href="#静态库" class="headerlink" title="静态库"></a>静态库</h4><p>函数和数据被编译进一个二进制文件（扩展名通常为.lib）</p><p>在使用静态库的情况下，在编译链接可执行文件时，链接器从静态库中<strong>复制这些函数和数据，并把它们和应用程序的其他模块组合起来创建最终的可执行文件（.exe）</strong>。<strong>当发布产品时，只需要发布这个可执行文件，并不需要发布被使用的静态库。</strong></p><h4 id="动态库"><a href="#动态库" class="headerlink" title="动态库"></a>动态库</h4><p>在使用动态库时，往往提供两个文件：<strong>一个引入库（.lib，非必须）和一个.dll文件</strong>。</p><p>这里的引入库和静态库文件虽然扩展名都是.lib，但是有着本质上的区别，对于一个动态链接库来说，<strong>其引入库文件包含该动态库导出的函数和变量的符号名，而.dll文件包含该动态库实际的函数和数据。</strong></p><h3 id="使用动态链接库的好处"><a href="#使用动态链接库的好处" class="headerlink" title="使用动态链接库的好处"></a>使用动态链接库的好处</h3><ul><li><p><strong>可以使用多种编程语言编写</strong>：比如我们可以用VC++编写dll，然后在VB编写的程序中调用它。</p></li><li><p><strong>增强产品功能</strong>：可以通过开发新的dll取代产品原有的dll，达到增强产品性能的目的。比如我们看到很多产品踢动了界面插件功能，允许用户动态地更换程序的界面，这就可以通过更换界面dll来实现。</p></li><li><p>提供二次开发的平台：用户可以单独利用dll调用其中实现的功能，来完成其他应用，实现二次开发。</p></li><li><p><strong>节省内存</strong>：如果多个应用程序使用同一个dll，该dll的页面只需要存入内存一次，所有的应用程序都可以共享它的页面，从而节省内存。</p></li></ul><h2 id="Clion-msvc"><a href="#Clion-msvc" class="headerlink" title="Clion+msvc"></a>Clion+msvc</h2><p>生成的dll可以在使用同一编译器的不同sdk之间相互调用，但是要注意导出的是x86还是amd64</p><h3 id="生成DLL"><a href="#生成DLL" class="headerlink" title="生成DLL"></a>生成DLL</h3><h4 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h4><p>C++库-类型选择shared</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204280931661.png" alt="image-20220415075952640"></p><h4 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h4><p>右键项目，新建C/C++源文件（或者直接新建一个类），并勾选创建关联头</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161800789.png" alt="image-20220415080306293"></p><h4 id="编写c"><a href="#编写c" class="headerlink" title="编写c++"></a>编写c++</h4><p>注意，类中的变量和函数只有public类型才可以被访问。</p><ul><li>使用<code>__declspec(dllexport)</code>声明导出函数</li><li>使用<code>extern “C” __declspec(dllexport)</code>声明导出函数为c类型</li></ul><p><code>DllDemo.h</code></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DLLDEMO_DLLDEMO_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">DLLDEMO_DLLDEMO_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>using namespace std<span class="token punctuation">;</span><span class="token comment">//使用__declspec(dllexport)声明导出函数</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">int</span> <span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>class <span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> Student<span class="token punctuation">{</span>public<span class="token operator">:</span>    <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>string name<span class="token punctuation">)</span><span class="token punctuation">;</span>    string <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>private<span class="token operator">:</span>    string name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">//DLLDEMO_DLLDEMO_H</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>DllDemo.cpp</code></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo.h"</span></span><span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello!"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> Student<span class="token operator">::</span><span class="token function">setName</span><span class="token punctuation">(</span>string name<span class="token punctuation">)</span> <span class="token punctuation">{</span>    this<span class="token operator">-&gt;</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span>string Student<span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> this<span class="token operator">-&gt;</span>name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> Student<span class="token operator">::</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>    this<span class="token operator">-&gt;</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> Student<span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> this<span class="token operator">-&gt;</span>age<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h4><p>在debug目录下生成了.dll、.lib文件，后续主要用到.dll、.lib和.h文件</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161800737.png" alt="image-20220415081755593"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>测试工具目录：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">C:<span class="token punctuation">\</span>Program Files <span class="token punctuation">(</span>x86<span class="token punctuation">)</span><span class="token punctuation">\</span>Microsoft Visual Studio <span class="token number">14.0</span><span class="token punctuation">\</span>VC<span class="token punctuation">\</span>bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>win+r——cmd 进入上述目录</p><p>输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">VCVARS32.bat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后进入dll文件所在目录</p><p>输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dumpbin -exports Dll1.dll<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用dll"><a href="#使用dll" class="headerlink" title="使用dll"></a>使用dll</h3><h4 id="新建项目-1"><a href="#新建项目-1" class="headerlink" title="新建项目"></a>新建项目</h4><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161800823.png" alt="image-20220415082005386"></p><h4 id="在项目根目录新建lib文件夹"><a href="#在项目根目录新建lib文件夹" class="headerlink" title="在项目根目录新建lib文件夹"></a>在项目根目录新建lib文件夹</h4><p>将上述生成的.dll   .lib 和编写的.h文件复制到lib中</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161800779.png" alt="image-20220415104232406"></p><h4 id="cmakelist-txt添加："><a href="#cmakelist-txt添加：" class="headerlink" title="cmakelist.txt添加："></a>cmakelist.txt添加：</h4><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.21</span><span class="token punctuation">)</span><span class="token keyword">project</span><span class="token punctuation">(</span>DllUser<span class="token punctuation">)</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_CXX_STANDARD</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token comment"># 包含文件夹</span><span class="token keyword">include_directories</span><span class="token punctuation">(</span>        src        lib<span class="token punctuation">)</span><span class="token comment"># 新增;指项目根目录下的lib目录</span><span class="token keyword">link_directories</span><span class="token punctuation">(</span>lib<span class="token punctuation">)</span><span class="token keyword">add_executable</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span>        src/main.cpp<span class="token punctuation">)</span><span class="token comment"># 新增;指目标链接的dll文件</span><span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span>        DllDemo<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="运行-调试配置："><a href="#运行-调试配置：" class="headerlink" title="运行/调试配置："></a>运行/调试配置：</h4><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801274.png" alt="image-20220415082456066"></p><h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><blockquote><p>方法1：lib中需要dll、lib和h三个文件</p></blockquote><ul><li>添加头文件</li><li>调用函数</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token comment">//添加头文件</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"lib/DllDemo.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    Student tian<span class="token punctuation">;</span>    tian<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"TianZD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    tian<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"tian'name:"</span><span class="token operator">&lt;&lt;</span>tian<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"tian'age:"</span><span class="token operator">&lt;&lt;</span>tian<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到正确输出</p><blockquote><p>方法2：lib中只需要dll文件</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>using namespace std<span class="token punctuation">;</span><span class="token comment">//#include "lib/DllDemo.h"</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllimport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllimport<span class="token punctuation">)</span> class Student<span class="token punctuation">{</span>private<span class="token operator">:</span>    string name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>public<span class="token operator">:</span>    <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>string name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>    string <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Student tian<span class="token punctuation">;</span>    tian<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"TianZD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    tian<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"tian'name:"</span><span class="token operator">&lt;&lt;</span>tian<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"tian'age:"</span><span class="token operator">&lt;&lt;</span>tian<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多层调用"><a href="#多层调用" class="headerlink" title="多层调用"></a>多层调用</h3><p>DllDemo1使用上面的</p><h4 id="新建DllDemo2-Dll文件"><a href="#新建DllDemo2-Dll文件" class="headerlink" title="新建DllDemo2 Dll文件"></a>新建DllDemo2 Dll文件</h4><h4 id="将DllDemo1的dll、lib、h文件放入lib中"><a href="#将DllDemo1的dll、lib、h文件放入lib中" class="headerlink" title="将DllDemo1的dll、lib、h文件放入lib中"></a>将DllDemo1的dll、lib、h文件放入lib中</h4><h4 id="编写DllDemo2-h和-cpp"><a href="#编写DllDemo2-h和-cpp" class="headerlink" title="编写DllDemo2.h和.cpp"></a>编写DllDemo2.h和.cpp</h4><h5 id="情况一：2的h中没有引入1的内容，cpp中引入"><a href="#情况一：2的h中没有引入1的内容，cpp中引入" class="headerlink" title="情况一：2的h中没有引入1的内容，cpp中引入"></a>情况一：2的h中没有引入1的内容，cpp中引入</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DLLDEMO2_DLLDEMO2_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">DLLDEMO2_DLLDEMO2_H</span></span><span class="token comment">//#include "DllDemo.h"</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">int</span> <span class="token function">myAdd2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//class __declspec(dllexport) Student2: Student{</span><span class="token comment">//public:</span><span class="token comment">//    void setAge2(int age);</span><span class="token comment">//    int getAge2();</span><span class="token comment">//private:</span><span class="token comment">//    int age2;</span><span class="token comment">//};</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">//DLLDEMO2_DLLDEMO2_H</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo2.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello2222"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Student tian<span class="token punctuation">;</span>    tian<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"dlldemo2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>tian<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">myAdd2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">myAdd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//</span><span class="token comment">//void Student2::setAge2(int age) {</span><span class="token comment">//    this-&gt;age2 = age;</span><span class="token comment">//}</span><span class="token comment">//</span><span class="token comment">//int Student2::getAge2() {</span><span class="token comment">//    return this-&gt;age2;</span><span class="token comment">//}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="情况二：2的h中引入了1的内容"><a href="#情况二：2的h中引入了1的内容" class="headerlink" title="情况二：2的h中引入了1的内容"></a>情况二：2的h中引入了1的内容</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DLLDEMO2_DLLDEMO2_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">DLLDEMO2_DLLDEMO2_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo.h"</span></span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>class <span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> Student2<span class="token operator">:</span> Student<span class="token punctuation">{</span>public<span class="token operator">:</span>    <span class="token keyword">void</span> <span class="token function">setAge2</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">getAge2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>private<span class="token operator">:</span>    <span class="token keyword">int</span> age2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">//DLLDEMO2_DLLDEMO2_H</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo2.h"</span></span><span class="token keyword">void</span> <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello2222"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> Student2<span class="token operator">::</span><span class="token function">setAge2</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>    this<span class="token operator">-&gt;</span>age2 <span class="token operator">=</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> Student2<span class="token operator">::</span><span class="token function">getAge2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> this<span class="token operator">-&gt;</span>age2<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="cmaklists-txt"><a href="#cmaklists-txt" class="headerlink" title="cmaklists.txt"></a>cmaklists.txt</h4><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.21</span><span class="token punctuation">)</span><span class="token keyword">project</span><span class="token punctuation">(</span>DllDemo2<span class="token punctuation">)</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_CXX_STANDARD</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token keyword">include_directories</span><span class="token punctuation">(</span>        src        lib<span class="token punctuation">)</span><span class="token comment"># 新增;指项目根目录下的lib目录</span><span class="token keyword">link_directories</span><span class="token punctuation">(</span>        lib<span class="token punctuation">)</span><span class="token keyword">add_library</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token namespace">SHARED</span>        <span class="token string">"src/library.cpp"</span>        <span class="token string">"src/DllDemo2.cpp"</span>        <span class="token string">"src/DllDemo2.h"</span><span class="token punctuation">)</span><span class="token comment"># 新增;指目标链接的dll文件</span><span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span>        DllDemo        <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="添加lib到编译器的环境变量中"><a href="#添加lib到编译器的环境变量中" class="headerlink" title="添加lib到编译器的环境变量中"></a>添加lib到编译器的环境变量中</h4><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><h5 id="情况一：2的h中没有引入1的内容，cpp中引入了"><a href="#情况一：2的h中没有引入1的内容，cpp中引入了" class="headerlink" title="情况一：2的h中没有引入1的内容，cpp中引入了"></a>情况一：2的h中没有引入1的内容，cpp中引入了</h5><p>只需要将1的dll和2的三个文件放入lib中</p><p>添加lib环境变量</p><p>cmake</p><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.21</span><span class="token punctuation">)</span><span class="token keyword">project</span><span class="token punctuation">(</span>DllUser2<span class="token punctuation">)</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_CXX_STANDARD</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token keyword">include_directories</span><span class="token punctuation">(</span>        src        lib<span class="token punctuation">)</span><span class="token comment"># 新增;指项目根目录下的lib目录</span><span class="token keyword">link_directories</span><span class="token punctuation">(</span>lib<span class="token punctuation">)</span><span class="token keyword">add_executable</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span>        src/main.cpp<span class="token punctuation">)</span><span class="token comment"># 新增;指目标链接的dll文件</span><span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span><span class="token comment">#只需要dlldemo2</span>        DllDemo2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo2.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello, World!"</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    std<span class="token operator">::</span>cout<span class="token operator">&lt;&lt;</span><span class="token function">myAdd2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801691.png" alt="image-20220415131004040"></p><h5 id="情况二：2的h中引入1"><a href="#情况二：2的h中引入1" class="headerlink" title="情况二：2的h中引入1"></a>情况二：2的h中引入1</h5><p>将1和2的三个文件（dll、lib、h）均放入到lib中</p><p>添加lib目录环境变量</p><p>添加cmakelists.txt</p><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.21</span><span class="token punctuation">)</span><span class="token keyword">project</span><span class="token punctuation">(</span>DllUser2<span class="token punctuation">)</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token variable">CMAKE_CXX_STANDARD</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token keyword">include_directories</span><span class="token punctuation">(</span>        src        lib<span class="token punctuation">)</span><span class="token comment"># 新增;指项目根目录下的lib目录</span><span class="token keyword">link_directories</span><span class="token punctuation">(</span>lib<span class="token punctuation">)</span><span class="token keyword">add_executable</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span>        src/main.cpp<span class="token punctuation">)</span><span class="token comment"># 新增;指目标链接的dll文件</span><span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span>        DllDemo        DllDemo2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo2.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello, World!"</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    Student tian<span class="token punctuation">;</span>    tian<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>tian<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    Student2 tian2<span class="token punctuation">;</span>    tian2<span class="token punctuation">.</span><span class="token function">setAge2</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>tian2<span class="token punctuation">.</span><span class="token function">getAge2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Visual-Studio-msvc（c-）"><a href="#Visual-Studio-msvc（c-）" class="headerlink" title="Visual Studio  + msvc（c++）"></a>Visual Studio  + msvc（c++）</h2><p>参考<a href="https://blog.csdn.net/freeking101/article/details/104632710/?utm_medium=distribute.wap_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.wap_blog_relevant_default&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4">博客</a></p><blockquote><p>可以直接调用clion生成的dll</p><p>生成平台X86、X64要注意，要和要调用该DLL的平台保持一直</p></blockquote><h3 id="生成dll"><a href="#生成dll" class="headerlink" title="生成dll"></a>生成dll</h3><p>把 函数 声明放在 .h 中，函数定义放在 cpp 文件中。</p><h4 id="新建项目-2"><a href="#新建项目-2" class="headerlink" title="新建项目"></a>新建项目</h4><p>选择<code>具有导出项的DLL动态链接库</code></p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801655.png" alt="image-20220415205304326"></p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801582.png" alt="image-20220415205923849"></p><h4 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h4><h5 id="声明导出"><a href="#声明导出" class="headerlink" title="声明导出"></a>声明导出</h5><p>头文件</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 以c方式导出</span><span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 以c++方式导出</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">hello1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以.def方式导出</span><span class="token keyword">void</span> <span class="token function">hello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>源文件</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"pch.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"framework.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"Dll2.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"hello"</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">hello1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"hello11"</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">hello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"hello2"</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后点击 “ 生成解决方案 ” ，就可以在工程目录的 debug 目录或者 release 目录下（这取决你生成的是debug版本还是release版本）生成了动态链接库的相关文件。第三方调用时关键的文件为 <strong>.lib文件</strong> 和 <strong>.dll文件</strong> 以及工程目录下的 <strong>.h头文件</strong> 。</p><h5 id="模板定义方式导出"><a href="#模板定义方式导出" class="headerlink" title="模板定义方式导出"></a>模板定义方式导出</h5><p>在项目中定义.def 文件，该文件为模块导出文件</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801369.png" alt="image-20220415210130710"></p><p>编写.def</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">LIBRARYEXPORTShello2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果是vs平台，需要在连接器中添加.def文件，如果是通过上述方式添加的.def，会自动添加</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801001.png" alt="image-20220415210911123"></p><p>然后点击 “ 生成解决方案 ” ，就可以在工程目录的 debug 目录或者 release 目录下（这取决你生成的是debug版本还是release版本）生成了动态链接库的相关文件。第三方调用时关键的文件为 <strong>.lib文件</strong> 和 <strong>.dll文件</strong> 以及工程目录下的 <strong>.h头文件</strong> </p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801637.png" alt="image-20220415211216385"></p><h3 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h3><h4 id="新建C-控制台应用"><a href="#新建C-控制台应用" class="headerlink" title="新建C++控制台应用"></a>新建C++控制台应用</h4><h4 id="将dll放在debug目录下，将h和lib放在可以找到的位置"><a href="#将dll放在debug目录下，将h和lib放在可以找到的位置" class="headerlink" title="将dll放在debug目录下，将h和lib放在可以找到的位置"></a>将dll放在debug目录下，将h和lib放在可以找到的位置</h4><p>   .dll文件是程序运行需要载入的动态链接库，VS中调试时可以通过 项目-&gt;属性-&gt;调试-&gt;环境 栏目添加.dll文件的 path 而成功调试，但在独立运行.exe程序是须将.dll文件放到同一目录下。</p><p>​     因此建议直接将 .dll文件 放入debug目录下或release目录下。.h头文件 和 .lib库文件 可以随意放置，只要是能够通过路径找到即可，为了方便管理，建议建立文件夹，放置在项目目录下。</p><h4 id="调用-2"><a href="#调用-2" class="headerlink" title="调用"></a>调用</h4><p>可以直接调用Clion生成的Dll，应该只与编译器有关（用的都是同一个版本的msvc）</p><h5 id="直接添加引用"><a href="#直接添加引用" class="headerlink" title="直接添加引用"></a>直接添加引用</h5><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"Dll2.h"</span><span class="token comment">//通过相对路径或绝对路径添加头文件</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">comment</span> <span class="token punctuation">(</span>lib<span class="token punctuation">,</span></span><span class="token string">"Dll2.lib"</span><span class="token expression"><span class="token punctuation">)</span>  </span><span class="token comment">// 添加 lib 文件</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!\n"</span><span class="token punctuation">;</span>    <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">hello1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">hello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801293.png" alt="image-20220415211932141"></p><h5 id="在解决方案管理面板中添加头文件和资源文件"><a href="#在解决方案管理面板中添加头文件和资源文件" class="headerlink" title="在解决方案管理面板中添加头文件和资源文件"></a>在解决方案管理面板中添加头文件和资源文件</h5><p>添加一个现有项头文件，在文件夹中找到第三方库的头文件( .h )，添加进新建立的项目。<br>添加一个现有项资源文件，在文件夹中找到第三方库的库文件( .lib )，添加进新建立的项目。</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801281.png" alt="image-20220415212042047"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"Dll2.h"</span><span class="token comment">//通过相对路径或绝对路径添加头文件</span></span><span class="token comment">//#pragma comment (lib,"Dll2.lib")  // 添加 lib 文件</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!\n"</span><span class="token punctuation">;</span>    <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">hello1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">hello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="在-项目属性-gt-设置-中-添加-头文件-和-库文件"><a href="#在-项目属性-gt-设置-中-添加-头文件-和-库文件" class="headerlink" title="在 项目属性 -> 设置 中 添加 头文件 和 库文件"></a>在 项目属性 -&gt; 设置 中 添加 头文件 和 库文件</h5><ul><li>项目-&gt;属性-&gt;VC++目录-&gt;包含目录 中添加第三方库的 <strong>头文件</strong>；</li><li>库目录 下 添加 第三方库 的 <strong>库文件(.lib文件）</strong>。</li><li>项目-&gt;属性-&gt;链接器-&gt;输入-&gt;附加依赖项中输入 <strong>库文件名称</strong>。</li></ul><h5 id="直接在代码load动态库文件"><a href="#直接在代码load动态库文件" class="headerlink" title="直接在代码load动态库文件"></a>直接在代码load动态库文件</h5><p>这种方法不需要 include .h文件，不需要添加 lib库 和 lib库路径，</p><ul><li>引入 windows.h（必须）</li><li>在 main 函数写下列语句调用 dll</li></ul><p>​         因为 C++ 声明 的 动态链接库会发生 Name Mangling，导致 编译后的函数名字会发生变化，所以需要使用 工具 查看 编译编译后的 动态链接库 对应的函数名。</p><p>​        而 extern “C” 声明的 和 def 文件声明的，编译后的函数名不会发生变化，可以直接使用。</p><p>VS2019 自带的工具 dumpbin.exe 可以查看编译后的 动态链接库对应的 函数名。</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801247.png" alt="image-20220415212305795"></p><p>打开命令行，输入命令 <code>dumpbin -exports Dll2.dll</code></p><p>这里采用博客中的内容：</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161801007.png" alt="img"></p><p>所以 addFunc 不能直接使用，只能用被 name Mangling 后的名字 ，这里 <strong>addFunc</strong> 编译后的名字是 <strong>?addFunc@@YAHHH@Z</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;windows.h&gt;</span></span>  <span class="token comment">// 加、减、乘 都是 int 类型</span><span class="token keyword">typedef</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token operator">*</span>lpFunc<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后边为参数，前面为返回值</span> <span class="token comment">// 除法 是 double 类型</span><span class="token keyword">typedef</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token operator">*</span>lpFuncD<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span> <span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后边为参数，前面为返回值</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!\n"</span><span class="token punctuation">;</span> HMODULE hModule<span class="token punctuation">;</span>hModule <span class="token operator">=</span> <span class="token function">LoadLibrary</span><span class="token punctuation">(</span>L<span class="token string">"CPPDLL.dll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//调用DLL</span> lpFunc lpfunc <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token comment">// GetProcAddress为获取该函数的地址 </span><span class="token comment">// "?addFunc@@YAHHH@Z" 这个就是 C++  Name Mangling后的 addFunc 的函数名</span>lpfunc <span class="token operator">=</span> <span class="token punctuation">(</span>lpFunc<span class="token punctuation">)</span><span class="token function">GetProcAddress</span><span class="token punctuation">(</span>hModule<span class="token punctuation">,</span> <span class="token string">"?addFunc@@YAHHH@Z"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">lpfunc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span> <span class="token comment">/* 使用 C extern 和 def 文件定义的动态链接库，函数名不会发生变化 */</span>lpfunc <span class="token operator">=</span> <span class="token punctuation">(</span>lpFunc<span class="token punctuation">)</span><span class="token function">GetProcAddress</span><span class="token punctuation">(</span>hModule<span class="token punctuation">,</span> <span class="token string">"subFunc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">lpfunc</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span> lpfunc <span class="token operator">=</span> <span class="token punctuation">(</span>lpFunc<span class="token punctuation">)</span><span class="token function">GetProcAddress</span><span class="token punctuation">(</span>hModule<span class="token punctuation">,</span> <span class="token string">"mulFunc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">lpfunc</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span> lpFuncD lpfuncd <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>lpfuncd <span class="token operator">=</span> <span class="token punctuation">(</span>lpFuncD<span class="token punctuation">)</span><span class="token function">GetProcAddress</span><span class="token punctuation">(</span>hModule<span class="token punctuation">,</span> <span class="token string">"divFunc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">lpfuncd</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token comment">//释放</span><span class="token function">FreeLibrary</span><span class="token punctuation">(</span>hModule<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="使用lib和dll文件"><a href="#使用lib和dll文件" class="headerlink" title="使用lib和dll文件"></a>使用lib和dll文件</h5><ul><li>把 <strong>CPPDLL.dll</strong> 文件放到 debug 目录下，</li><li>然后在项目中引入 <strong>CPPDLL.lib</strong> 文件。 <strong>链接器</strong> -&gt; <strong>输入</strong> -&gt; <strong>附加依赖项</strong> -&gt; <strong>编辑</strong></li></ul><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802483.png" alt="img"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>  <span class="token comment">// addFunc 是使用 C++ 方式声明的，</span><span class="token function">_declspec</span><span class="token punctuation">(</span>dllimport<span class="token punctuation">)</span> <span class="token keyword">int</span> <span class="token function">addFunc</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//subFunc 是 使用 extern "C" 声明的</span><span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token function">_declspec</span><span class="token punctuation">(</span>dllimport<span class="token punctuation">)</span> <span class="token keyword">int</span> <span class="token function">subFunc</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// mulFunc 和 divFunc 是 使用 def 声明的</span><span class="token function">_declspec</span><span class="token punctuation">(</span>dllimport<span class="token punctuation">)</span> <span class="token keyword">int</span> <span class="token function">mulFunc</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">_declspec</span><span class="token punctuation">(</span>dllimport<span class="token punctuation">)</span> <span class="token keyword">double</span> <span class="token function">divFunc</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span> <span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!\n"</span><span class="token punctuation">;</span>     std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">addFunc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">subFunc</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">mulFunc</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token function">divFunc</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还可以结合 <strong>第一种方法</strong>，使用 <strong>#pragma comment (lib,”./CPPDLL.lib”)</strong> //添加 lib 文件 </p><p>这样就不用 手动设置 添加 lib 文件了</p><h4 id="多层调用-1"><a href="#多层调用-1" class="headerlink" title="多层调用"></a>多层调用</h4><p>只需要把多层的dll都放进去即可</p><h2 id="VisualStudio-（c-）调用c-的DLL"><a href="#VisualStudio-（c-）调用c-的DLL" class="headerlink" title="VisualStudio （c#）调用c++的DLL"></a>VisualStudio （c#）调用c++的DLL</h2><blockquote><p>个人一般只用c#调用c++代码</p><p>可以直接调用Clion生成的DLL，但是只能调用<strong>extern “C”声明的导出函数</strong></p></blockquote><p>注意：一般msvc版本是X86的，要注意，使用x64位的netCore无法调用，这里我用的是netFramwork</p><h3 id="生成DLL-1"><a href="#生成DLL-1" class="headerlink" title="生成DLL"></a>生成DLL</h3><p>使用Clion，也可以使用visualStudion，生成方法同上，这里只列出代码部分</p><h4 id="第一层："><a href="#第一层：" class="headerlink" title="第一层："></a>第一层：</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DLLDEMO_DLLDEMO_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">DLLDEMO_DLLDEMO_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">sayHello1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">int</span> <span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>class Student<span class="token punctuation">{</span>public<span class="token operator">:</span>    string name<span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">studentHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">//DLLDEMO_DLLDEMO_H</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo.h"</span></span><span class="token keyword">void</span> Student<span class="token operator">::</span><span class="token function">studentHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"studentHello"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Student s<span class="token punctuation">;</span>    s<span class="token punctuation">.</span><span class="token function">studentHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello1111111!"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">sayHello1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Student s<span class="token punctuation">;</span>    s<span class="token punctuation">.</span><span class="token function">studentHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello1111111!"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二层"><a href="#第二层" class="headerlink" title="第二层"></a>第二层</h4><p>将1的三个文件放入lib</p><p>配置编译器lib环境变量</p><p>添加cmakelists.txt</p><p>编写调用代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//</span><span class="token comment">// Created by 12038 on 2022/4/15.</span><span class="token comment">//</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DLLDEMO2_DLLDEMO2_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">DLLDEMO2_DLLDEMO2_H</span></span><span class="token comment">//#include "DllDemo.h"</span><span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token function">__declspec</span><span class="token punctuation">(</span>dllexport<span class="token punctuation">)</span> <span class="token keyword">int</span> <span class="token function">myAdd2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>class Student2<span class="token punctuation">{</span>public<span class="token operator">:</span>    <span class="token keyword">void</span> <span class="token function">student2Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">//DLLDEMO2_DLLDEMO2_H</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//</span><span class="token comment">// Created by 12038 on 2022/4/15.</span><span class="token comment">//</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo2.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello2222"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Student2 tian<span class="token punctuation">;</span>    tian<span class="token punctuation">.</span><span class="token function">student2Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">myAdd2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">myAdd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//</span><span class="token keyword">void</span> Student2<span class="token operator">::</span><span class="token function">student2Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"student22222Hello"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="visual-studio调用"><a href="#visual-studio调用" class="headerlink" title="visual studio调用"></a>visual studio调用</h3><h3 id="建立netframework项目"><a href="#建立netframework项目" class="headerlink" title="建立netframework项目"></a>建立netframework项目</h3><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802422.png" alt="image-20220415183057359"></p><h3 id="将两个dll文件放到debug目录下"><a href="#将两个dll文件放到debug目录下" class="headerlink" title="将两个dll文件放到debug目录下"></a>将两个dll文件放到debug目录下</h3><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802830.png" alt="image-20220415183130534"></p><h3 id="调用-3"><a href="#调用-3" class="headerlink" title="调用"></a>调用</h3><p>添加<code>using System.Runtime.InteropServices;</code></p><p>导入库文件<code>[DllImport("DllDemo2.dll")]</code></p><p>导入函数<code>private static extern void sayHello2();</code></p><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;//添加相应的库using System.Runtime.InteropServices;namespace ConsoleApp3{    class Program    {        //调用        [DllImport("DllDemo2.dll")]        private static extern void sayHello2();        [DllImport("DllDemo2.dll")]        private static extern int myAdd2(int a, int b);                static void Main(string[] args)        {            //使用            sayHello2();            Console.WriteLine(myAdd2(1, 2));        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="QT-Creator-msvc"><a href="#QT-Creator-msvc" class="headerlink" title="QT Creator + msvc"></a>QT Creator + msvc</h2><h3 id="生成dll-1"><a href="#生成dll-1" class="headerlink" title="生成dll"></a>生成dll</h3><ul><li>新建dll项目</li></ul><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802876.png" alt="image-20220416163601291"></p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802629.png" alt="image-20220416163629764"></p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802040.png" alt="image-20220416163646551"></p><p>生成后的结构如下（这里用的的DllDemo1）：</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802235.png" alt="image-20220416171503348"></p><p>其中_global.h自带两个系统默认导出宏</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DLLDEMO1_GLOBAL_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">DLLDEMO1_GLOBAL_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QtCore/qglobal.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>DLLDEMO1_LIBRARY<span class="token punctuation">)</span></span></span><span class="token macro property"><span class="token directive-hash">#</span>  <span class="token directive keyword">define</span> <span class="token expression">DLLDEMO1_EXPORT Q_DECL_EXPORT</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span><span class="token macro property"><span class="token directive-hash">#</span>  <span class="token directive keyword">define</span> <span class="token expression">DLLDEMO1_EXPORT Q_DECL_IMPORT</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// DLLDEMO1_GLOBAL_H</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>编写导出函数</li></ul><p>头文件：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">DLLDEMO1_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">DLLDEMO1_H</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"DllDemo1_global.h"</span></span>class DLLDEMO1_EXPORT DllDemo1<span class="token punctuation">{</span>public<span class="token operator">:</span>    <span class="token function">DllDemo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//声明导出的函数sayhello</span>DLLDEMO1_EXPORT <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//声明导出的函数myadd</span>DLLDEMO1_EXPORT <span class="token keyword">int</span> <span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// DLLDEMO1_H</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>源文件：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"dlldemo1.h"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>DllDemo1<span class="token operator">::</span><span class="token function">DllDemo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//实现函数</span><span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    std<span class="token operator">::</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello, dll in qt"</span><span class="token operator">&lt;&lt;</span>std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">myadd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    std<span class="token operator">::</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"myadd"</span><span class="token operator">&lt;&lt;</span>std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>构建后会在debug目录下生成<strong>dll和lib文件，同时可能需要用到.h和_global.h文件</strong></p><h3 id="调用-4"><a href="#调用-4" class="headerlink" title="调用"></a>调用</h3><h4 id="新建c-控制台项目"><a href="#新建c-控制台项目" class="headerlink" title="新建c++控制台项目"></a>新建c++控制台项目</h4><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802293.png" alt="image-20220416172129620"></p><h4 id="构建项目，生成debug目录"><a href="#构建项目，生成debug目录" class="headerlink" title="构建项目，生成debug目录"></a>构建项目，生成debug目录</h4><h4 id="将dll文件放到debug目录"><a href="#将dll文件放到debug目录" class="headerlink" title="将dll文件放到debug目录"></a>将dll文件放到debug目录</h4><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802638.png" alt="image-20220416172227912"></p><h4 id="将lib文件放到工程目录下"><a href="#将lib文件放到工程目录下" class="headerlink" title="将lib文件放到工程目录下"></a>将lib文件放到工程目录下</h4><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802366.png" alt="image-20220416172258532"></p><h4 id="右键项目，添加lib库"><a href="#右键项目，添加lib库" class="headerlink" title="右键项目，添加lib库"></a>右键项目，添加lib库</h4><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802541.png"></p><p><strong>选择外部库</strong></p><p>选择刚才的lib文件，取消平台下的linux，mac，取消为debug版本添加d作为哦后缀，点击完成代码就被添加进call.pro</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161808242.png" alt="image-20220416172524995"></p><h4 id="调用-5"><a href="#调用-5" class="headerlink" title="调用"></a>调用</h4><ul><li>方法1：</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QCoreApplication&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>using namespace std<span class="token punctuation">;</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllimport<span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">__declspec</span><span class="token punctuation">(</span>dllimport<span class="token punctuation">)</span> <span class="token keyword">int</span> <span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    QCoreApplication <span class="token function">a</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>方法2</li></ul><p>将.h和_global.h放入到项目目录下</p><p>右键项目，添加两个.h文件</p><p><img src="./assets/dll%E7%94%9F%E6%88%90%E4%B8%8E%E4%BD%BF%E7%94%A8/202204161802804.png" alt="image-20220416175017723"></p><p>引入头文件</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QCoreApplication&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token comment">//引入头文件</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"./dlldemo1.h"</span></span>using namespace std<span class="token punctuation">;</span><span class="token comment">//__declspec(dllimport) void sayHello();</span><span class="token comment">//__declspec(dllimport) int myAdd(int a, int b);</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    QCoreApplication <span class="token function">a</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token function">myAdd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> DLL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda</title>
      <link href="posts/5c8e05d2.html"/>
      <url>posts/5c8e05d2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Anaconda指的是一个开源的Python发行版本，其包含了conda、Python等180多个科学包及其依赖项。 因为包含了大量的科学包，Anaconda 的下载文件比较大（约 531 MB），如果只需要某些包，或者需要节省带宽或存储空间，也可以使用Miniconda这个较小的发行版（仅包含conda和 Python）。</p><p>Conda是一个开源的包、环境管理器，可以用于在同一个机器上安装不同版本的软件包及其依赖，并能够在不同的环境之间切换</p><p>Anaconda包括Conda、Python以及一大堆安装好的工具包，比如：numpy、pandas等</p><p>Miniconda包括Conda、Python</p><p><a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/">清华Anaconda 镜像使用帮助</a></p><h2 id="下载、安装"><a href="#下载、安装" class="headerlink" title="下载、安装"></a>下载、安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">清华镜像</a></p><p><a href="https://www.anaconda.com/download/">官网</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载后一路NEXT</p><p><img src="./assets/Anaconda/202202181420521.png" alt="第五步"></p><p>第一个选项是添加环境变量，默认是没有勾选的，请务必勾选上，如果这里不勾选，后续安装完成后想要自行添加环境变量会非常麻烦。勾选完后点击 Install 安装。如果忘了勾选可以卸载重装。</p><p>安装完成后在开始菜单会多出一个快捷方式，也就是Anaconda下的4个子程序：</p><p><img src="./assets/Anaconda/202202181421240.png" alt="开始菜单"></p><p>其中Anaconda Prompt 就是我们的cmd</p><p>Anaconda Navigator是管理器，可以在里面通过图像化界面管理虚拟环境</p><p>键入<code>python --version</code> 回车，查看当前安装的python版本<br>我们也可以通过键入<code>python</code> 回车进入python解释器</p><p>安装完成后，在<strong>终端</strong>输入<code>conda -V</code>注意v为大写，可以查看conda版本</p><p><img src="./assets/Anaconda/202202230852094.png" alt="image-20220218142336122"></p><h2 id="更改源"><a href="#更改源" class="headerlink" title="更改源"></a>更改源</h2><p><a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/">清华Anaconda 镜像使用帮助</a></p><p>各系统都可以通过修改用户目录下的 <code>.condarc</code> 文件</p><p>Windows 用户无法直接创建名为 <code>.condarc</code> 的文件，可先执行 <code>conda config --set show_channel_urls yes</code> 生成该文件之后再修改。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">channels:  - defaultsshow_channel_urls: <span class="token boolean">true</span>default_channels:  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2custom_channels:  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>即可添加 Anaconda Python 免费仓库。</p><p>运行 <code>conda clean -i</code> 清除索引缓存，保证用的是镜像站提供的索引。</p><p>运行 <code>conda create -n myenv numpy</code> 测试一下吧。</p><h2 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h2><p><a href="https://blog.csdn.net/sizhi_xht/article/details/80964099?spm=1001.2101.3001.6650.6&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-6.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-6.pc_relevant_default&amp;utm_relevant_index=11">Anaconda创建、激活、退出、删除虚拟环境</a></p><p>方法1：通过Anaconda Navigator应用图形化方式管理，安装anaconda后自带</p><p>方法2：通过命令行</p><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><p>使用 <code>conda create -n your_env_name python=X.X（2.7、3.6等）</code></p><p>anaconda 命令创建python版本为X.X、名字为your_env_name的虚拟环境。your_env_name文件可以在Anaconda安装目录envs文件下找到。 指定python版本为2.7，注意至少需要指定python版本或者要安装的包， 在不指定python版本时，自动安装最新python版本。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda create -n env_name <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">2.7</span><span class="token comment"># 同时安装必要的包</span>conda create -n env_name numpy matplotlib <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">2.7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h3><p>使用如下命令即可激活创建的虚拟环境</p><p>Linux:  <code>source activate your_env_name(虚拟环境名称)</code></p><p>Windows: <code>activate your_env_name(虚拟环境名称)</code></p><h3 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title="退出虚拟环境"></a>退出虚拟环境</h3><p>使用如下命令即可退出创建的虚拟环境</p><p>Linux: <code>source deactivate your_env_name(虚拟环境名称)</code></p><p>Windows:<code>deactivate env_name</code>，也可以使用<code>activate root</code>切回root环境</p><h3 id="虚拟环境管理"><a href="#虚拟环境管理" class="headerlink" title="虚拟环境管理"></a>虚拟环境管理</h3><p><strong>删除环境：</strong></p><p>使用命令<code>conda remove -n your_env_name(虚拟环境名称) --all</code>， 即可删除。</p><p><strong>删除虚拟环境中的包：</strong></p><p>使用命令<code>conda remove --name $your_env_name $package_name（包名）</code> 即可。</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ol><li><code>conda list</code>：查看安装了哪些包。</li><li><code>conda install package_name(包名)</code>：安装包</li><li><code>conda env list 或 conda info -e</code>：查看当前存在哪些虚拟环境</li><li><code>conda update conda</code>：检查更新当前conda</li></ol>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> conda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通讯数据格式转换</title>
      <link href="posts/fffca2d8.html"/>
      <url>posts/fffca2d8.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[toc]</p><h1 id="通讯数据格式转换（float-real-word-byte"><a href="#通讯数据格式转换（float-real-word-byte" class="headerlink" title="通讯数据格式转换（float/real-word-byte)"></a>通讯数据格式转换（float/real-word-byte)</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在上位机和下位机进行通讯的时候，通常要进行数据转换为字节（8位）或者word（16位）进行传输</p><p>modubusTCP在传输时，通过<strong>读写保持性寄存器</strong>位进行数据传输，一个保持性寄存器占有<strong>2个byte</strong>，<strong>16个bite</strong>，传输的数据常为<strong>float型（4个byte，32位）</strong>，需要进行转换</p><p>浮点数的表示通常采用<strong>IEEE 754浮点数标准</strong>，可以参考文章<a href="https://www.cnblogs.com/MikeZhang/p/IEEE754FloatEncode20180117.html">IEEE754标准的浮点数存储格式</a></p><p>IEEE754转换：<a href="http://www.speedfly.cn/tools/hexconvert/">在线转换网址</a></p><h2 id="数据在内存中的存储格式"><a href="#数据在内存中的存储格式" class="headerlink" title="数据在内存中的存储格式"></a>数据在内存中的存储格式</h2><h3 id="大端模式"><a href="#大端模式" class="headerlink" title="大端模式"></a>大端模式</h3><p>大端模式是指数据的高字节保存在内存的低地址单元中，而数据的低字节保存在内存的高地址单元中，这样的存储模式有点类似于把数据当作字符串顺序处理：地址由小向大增加，而数据从高位往低位放；这和我们的阅读习惯一致。</p><h3 id="小端模式"><a href="#小端模式" class="headerlink" title="小端模式"></a>小端模式</h3><p>小端模式是指数据的高字节保存在内存的高地址单元中，而数据的低字节保存在内存的低地址单元中。</p><h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><p>其中float-byte、byte-float代码转自CSDN文章：<a href="https://blog.csdn.net/weixin_42700740/article/details/103236885?share_token=7af34e32-1bce-4b09-9225-afa6e02006f6">float型数据与4字节之间的转换,作者tutu-hu</a></p><h3 id="float-byte（32位浮点数转4个8位）"><a href="#float-byte（32位浮点数转4个8位）" class="headerlink" title="float-byte（32位浮点数转4个8位）"></a>float-byte（32位浮点数转4个8位）</h3><p><strong>2进制，与运算，左移运算</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">/*将浮点数f转化为4个字节数据存放在byte[4]中*/unsigned char* Float_to_Byte(float f){float float_data = 0;unsigned long longdata = 0;longdata = *(unsigned long*)&amp;f;           //注意，会丢失精度byte[0] = (longdata &amp; 0xFF000000) &gt;&gt; 24;byte[1] = (longdata &amp; 0x00FF0000) &gt;&gt; 16;byte[2] = (longdata &amp; 0x0000FF00) &gt;&gt; 8;byte[3] = (longdata &amp; 0x000000FF);return byte;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="float-word（32位浮点数转2个16位）"><a href="#float-word（32位浮点数转2个16位）" class="headerlink" title="float-word（32位浮点数转2个16位）"></a>float-word（32位浮点数转2个16位）</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">unsigned int* Float_to_word(float f){    unsigned long longdata = 0;    longdata = *(unsigned long*)&amp;f;           //注意，会丢失精度    word[0] = (longdata &amp; 0xFFFF0000) &gt;&gt; 16;    word[1] = (longdata &amp; 0x0000FFFF);    return word;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="byte-float（4个8位转1个32位浮点数）"><a href="#byte-float（4个8位转1个32位浮点数）" class="headerlink" title="byte-float（4个8位转1个32位浮点数）"></a>byte-float（4个8位转1个32位浮点数）</h3><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><p>把四个字节存储好之后，再把这个<strong>存储区域的首地址强制转换为float指针类型</strong>，这样就可以提取出这个浮点数了。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*将4个字节数据byte[4]转化为浮点数存放在*f中*/</span><span class="token keyword">float</span> <span class="token function">Byte_to_Float</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">float</span> float_data<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> longdata <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>longdata <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>p <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>p <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>float_data <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>longdata<span class="token punctuation">;</span><span class="token keyword">return</span> float_data<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><p>把四个字节存储好之后，再把这个<strong>存储区域的首地址强制转换为float指针类型</strong>，这样就可以提取出这个浮点数了。</p><p>这个和方法1类似</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/** *作用：把u8四字节数组转为float *note：低地址放float的低字节**/</span><span class="token keyword">float</span> <span class="token function">U8_to_Float</span><span class="token punctuation">(</span>u8<span class="token operator">*</span> str<span class="token punctuation">)</span>  <span class="token punctuation">{</span>  <span class="token keyword">float</span> data<span class="token punctuation">;</span>data <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span><span class="token punctuation">)</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> data<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h4><p>定义一个float变量，然后定义u8类型指针数组指向float变量地址，Modbus协议解析的时候只管向地址指向的存储单元填充数据，需要用浮点数的时候直接拿过来用就可以了。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>      <span class="token keyword">float</span> freq<span class="token punctuation">;</span>    <span class="token keyword">char</span> recv<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0xbc</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">//接收到的数据，高字节到低字节排列</span>    <span class="token keyword">char</span> <span class="token operator">*</span>Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//定义保持寄存器指针数组</span>    <span class="token comment">//第一步：指针初始化</span>    Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>freq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">//低地址指向高位</span>    Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>freq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>         Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>freq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>         Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>freq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//高地址指向低位</span>    <span class="token comment">//第二步：给地址指定的内存单元赋值（对应Modbus协议中的数据解析）</span>    <span class="token operator">*</span>Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> recv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">*</span>Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> recv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">*</span>Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> recv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">*</span>Modbus_HoldReg<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> recv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%f\r\n"</span><span class="token punctuation">,</span> freq<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="word-float（2个16位合成1个32位浮点数）"><a href="#word-float（2个16位合成1个32位浮点数）" class="headerlink" title="word-float（2个16位合成1个32位浮点数）"></a>word-float（2个16位合成1个32位浮点数）</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">float</span> <span class="token function">Byte_to_Float</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">float</span> float_data<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> longdata <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>longdata <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>float_data <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>longdata<span class="token punctuation">;</span><span class="token keyword">return</span> float_data<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="byte-word（2个8位合成1个16位）"><a href="#byte-word（2个8位合成1个16位）" class="headerlink" title="byte-word（2个8位合成1个16位）"></a>byte-word（2个8位合成1个16位）</h3><p>两个8位数如何转化为16位数？</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> data <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> b<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">char</span> a<span class="token punctuation">;</span><span class="token comment">//高位</span><span class="token keyword">char</span> b<span class="token punctuation">;</span><span class="token comment">//低位</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">int</span> data <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xFF00</span><span class="token punctuation">;</span>data <span class="token operator">&amp;=</span> b<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据格式 </tag>
            
            <tag> modbus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frp-转载</title>
      <link href="posts/c65a4228.html"/>
      <url>posts/c65a4228.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="frp服务端和客户端配置"><a href="#frp服务端和客户端配置" class="headerlink" title="frp服务端和客户端配置"></a>frp服务端和客户端配置</h2><p>转载自<a href="https://blog.csdn.net/weixin_44373340/article/details/109803722">blog.csdn.net</a></p><h3 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h3><p>frp的服务器端，一般命名为frps，配置文件是frps.ini，首先需要下载frp，可以在(https://<a href="https://so.csdn.net/so/search?q=github&amp;spm=1001.2101.3001.7020">github</a>.com/fatedier/frp/releases)下载最新版的frp。（此处以 frp_0.32.0_linux_amd64 为例）.</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Wget https://github.com/fatedier/frp/releases/download/v0.32.0/frp_0.32.0_linux_amd64.tar.gz<span class="token function">tar</span> -zxvf frp_0.32.0_linux_amd64.tar.gz<span class="token builtin class-name">cd</span> frp_0.32.0_linux_amd64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​        </p><p>进入frp_0.32.0_linux_amd64文件夹，打开frps.ini进行服务器端配置</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> frps.ini   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        </p><p>如果出现无法写入的错误请使用</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">vim</span> frps.ini<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        </p><p>在frps.ini文件中配置如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>common<span class="token punctuation">]</span>bind_port <span class="token operator">=</span> <span class="token number">7000</span> <span class="token comment">#绑定的端口，需要与客户端中 server_port 参数保持一致</span>vhost_http_port <span class="token operator">=</span> <span class="token number">80</span> <span class="token comment">#虚拟主机运行在本机的端口，如果 vps 有服务占用了端口，应当更换</span>dashboard_port <span class="token operator">=</span> dashboard_port_number <span class="token comment">#frp 后台服务页面的端口，如果设置 8000，便可通过 http://yourip:8000 来访问 frps 的后台页面</span>dashboard_user <span class="token operator">=</span> dashboard_user_name <span class="token comment">#：frp 后台服务页面的管理员用户名</span>dashboard_pwd <span class="token operator">=</span> dashboard_pwd_value <span class="token comment">#frp 后台服务页面的管理员密码</span>privilege_token <span class="token operator">=</span> privilege_token_value <span class="token comment">#自定义值，必须与客户端中的 privilege_token 保持一致</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        </p><p>配置完成之后，便可以通过如下命令启动 frps：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./frps -c ./frps.ini <span class="token comment">#启动服务端frp</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        </p><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>客户端一般命名为frpc，配置文件是frpc.ini，首先需要下载frp，可以在<a href="https://github.com/fatedier/frp/releases%E4%B8%8B%E8%BD%BD%E6%9C%80%E6%96%B0%E7%89%88%E7%9A%84frp%E3%80%82%EF%BC%88%E6%AD%A4%E5%A4%84%E4%BB%A5">https://github.com/fatedier/frp/releases下载最新版的frp。（此处以</a> frp_0.32.0_linux_amd64 为例）</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">wget</span> https://github.com/fatedier/frp/releases/download/v0.32.0/frp_0.32.0_linux_amd64.tar.gz<span class="token function">tar</span> -zxvf frp_0.32.0_linux_amd64.tar.gz<span class="token builtin class-name">cd</span> frp_0.32.0_linux_amd64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​        </p><p>进入frp_0.32.0_linux_amd64文件夹，打开frps.ini进行服务器端配置</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> frpc.ini   <span class="token comment">#无法写入添加sudo权限</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        </p><p>在frpc.ini文件中配置如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>common<span class="token punctuation">]</span>server_addr <span class="token operator">=</span> your_server_ip <span class="token comment">#服务器端的 ip</span>server_port <span class="token operator">=</span> <span class="token number">7000</span> <span class="token comment">#服务器端的端口，即 bind_port</span>privilege_token <span class="token operator">=</span> privilege_token_value <span class="token comment">#同服务器端的 privilege_token 保持一致</span><span class="token punctuation">[</span>ssh<span class="token punctuation">]</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> tcplocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">22</span>remote_port <span class="token operator">=</span> remote_port_number <span class="token comment">#远程端口，即 ssh 连接树莓派时的端口</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        </p><p>配置完成之后，便可以通过如下命令启动 frps：</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">./frpc -c ./frpc.ini #启动客户端frp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        </p><h3 id="frp自启动配置"><a href="#frp自启动配置" class="headerlink" title="frp自启动配置"></a>frp自启动配置</h3><p>服务端自启动：</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sudo vim /lib/systemd/system/frps.service #进入frps.service文件编写#写入下列命令[Unit]Description=fraps serviceAfter=network.target network-online.target syslog.targetWants=network.target network-online.target [Service]Type=simpleExecStart=/your/path/frps -c /your/path/frps.ini #启动服务的命令（此处写你的frps的实际安装目录） #路径为实际安装路径，比如frp在usr用户的frp下，应该配置为ExecStart=/home/usr/frp/frps -c /home/usr/frp/frps.ini[Install]WantedBy=multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        </p><p>然后启动 frps</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sudo systemctl start frps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        </p><p>再打开自启动</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sudo systemctl enable frps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        </p><p>此外</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sudo systemctl restart frps #重启sudo systemctl stop frps #停止sudo systemctl status frps #查看应用日志<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​        </p><p>客户端自启动配置类似。将frps改为frpc</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.jianshu.com/p/a921e85280ed-">https://www.jianshu.com/p/a921e85280ed-</a><br><a href="https://blog.csdn.net/sinat/_29963957/article/details/83591264?depth%5C_1-utm%5C_source=distribute.pc%5C_relevant.none-task&amp;utm%5C_source=distribute.pc%5C_relevant.none-task">https://blog.csdn.net/sinat\_29963957/article/details/83591264?depth\_1-utm\_source=distribute.pc\_relevant.none-task&amp;utm\_source=distribute.pc\_relevant.none-task</a></p><p><a href="https://blog.csdn.net/weixin_44373340/article/details/109803722">查看原网页: blog.csdn.net</a></p><h2 id="FRP-远程桌面"><a href="#FRP-远程桌面" class="headerlink" title="FRP+远程桌面"></a>FRP+远程桌面</h2><p><a href="https://www.cnblogs.com/chenjw-note/p/12659786.html">查看原网页: www.cnblogs.com</a></p><p>服务端系统：CentOS Linux release 7.6.1810 (Core)</p><p>1.服务端配置：</p><p>2.在被远程的电脑安装客户端：</p><p>　　下载：<a href="https://files.cnblogs.com/files/chenjw-note/frp/_0.21.0/_windows/_386.zip">https://files.cnblogs.com/files/chenjw-note/frp\_0.21.0\_windows\_386.zip</a></p><p>　　解压：</p><p>　　修改配置文件</p><p>本地端口：<code>3389</code></p><p> 使用命令行运行程序：</p><p>进入对应程序目录：cd C:\Users\chenjianwen\Desktop\frp_远程桌面使用流程-芒果\frp_0.21.0_windows_386</p><p>执行命令：.\frpc.exe -c frpc.ini</p><p>看到如图则成功安装，这个黑色框框不能关掉了哦</p><p><img src="assets/FRP%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20220520141246091.png" alt="image-20220520141246091"></p><p>开启远程设置：</p><p><img src="assets/FRP%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20220520141229737.png" alt="image-20220520141229737"></p><p><strong>以上，仅执行一次部署完即可</strong></p><p>==================================================</p><p> 使用家里电脑的远程桌面工具连接公司办公电脑</p><p><img src="assets/FRP%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20220520141303941.png" alt="image-20220520141303941"></p><p>开始连接远程桌面，输入框输入：118.89.23.85:上面根据工号定义的端口</p><p><img src="assets/FRP%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20220520141319078.png" alt="image-20220520141319078"></p><p><a href="https://www.cnblogs.com/chenjw-note/p/12659786.html">查看原网页: www.cnblogs.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docsify</title>
      <link href="posts/2eeac462.html"/>
      <url>posts/2eeac462.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Docsify"><a href="#Docsify" class="headerlink" title="Docsify"></a>Docsify</h1><p>[toc]</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4ODI1MjA3NQ==&amp;mid=2247510629&amp;idx=1&amp;sn=48e481b9f176ebeb2d68342af3f33317&amp;chksm=fddd7ca1caaaf5b73efe05dcb5b87c570344708e2a7bddffb5c8bd08638b631e595a4d2b646c&amp;mpshare=1&amp;scene=1&amp;srcid=0223V1apWEBHMQrFHzWwPQiN&amp;sharer_sharetime=1645581220908&amp;sharer_shareid=9615bd3fd5ee967a5d2b03b78f23d393#rd">codesheep微信文章</a></p><h2 id="框架对比"><a href="#框架对比" class="headerlink" title="框架对比"></a>框架对比</h2><p>其实做这种网站，完全不用自己手写，现成的工具太多了，这地方随便举几个典型例子吧。</p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>这是一个大家用得非常广泛的静态博客，两年前咱们这里就已经演示过它的使用以及部署上线。</p><p><img src="./assets/Docsify/202202232332738.png" alt="图片"></p><p>工具地址：<a href="https://hexo.io/">https://hexo.io</a></p><h3 id="VuePress"><a href="#VuePress" class="headerlink" title="VuePress"></a>VuePress</h3><p>一款基于Vue框架驱动的静态网站生成器，比较符合用于知识文档网站的建站需求，现在用的小伙伴也很多。</p><p><img src="./assets/Docsify/202202232332139.png" alt="图片"></p><p>工具地址：<a href="https://vuepress.vuejs.org/">https://vuepress.vuejs.org/</a></p><h3 id="docsify"><a href="#docsify" class="headerlink" title="docsify"></a>docsify</h3><p>docsify同样是一个很好用的知识文档网站生成框架，轻量简便，而且无需构建，写完内容就可以直接发布，界面干净又卫生。</p><p><img src="./assets/Docsify/202202232332353.png" alt="图片"></p><p>工具地址：<a href="https://docsify.js.org/">https://docsify.js.org/</a></p><ul><li>无需构建，写完文档直接发布</li><li>容易使用并且轻量 (压缩后 ~21kB)</li><li>智能的全文搜索</li><li>提供多套主题</li><li>丰富的 API</li><li>支持 Emoji</li><li>兼容 IE11</li><li>支持服务端渲染 SSR (<a href="https://github.com/docsifyjs/docsify-ssr-demo">示例</a>)</li></ul><h3 id="Gitbook"><a href="#Gitbook" class="headerlink" title="Gitbook"></a>Gitbook</h3><p>GitBook也是一个可以用来制作知识库文档以及精美电子书网站的工具框架，不少技术电子书文档都是用它来做的。</p><p><img src="./assets/Docsify/202202232332503.png" alt="图片"></p><p>工具地址：<a href="https://github.com/GitbookIO/gitbook">https://github.com/GitbookIO/gitbook</a></p><h2 id="前置环境"><a href="#前置环境" class="headerlink" title="前置环境"></a>前置环境</h2><p>docsify唯一需要的一个前置工具就是<code>npm</code>工具</p><p>查看是否安装及版本</p><p><img src="./assets/Docsify/202202232334892.png" alt="图片"></p><p>如果没有的话，直接在本地电脑上安装一个<code>node.js</code>环境就可以了。</p><p><img src="./assets/Docsify/202202232334539.jpeg" alt="图片"></p><p>不管是macOS还是Windows系统，直接去<code>https://nodejs.org/</code>官网下载个安装包就可以了，直接下一步下一步即可，安装完成之后会包含npm工具。</p><h2 id="安装Docsify"><a href="#安装Docsify" class="headerlink" title="安装Docsify"></a>安装Docsify</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g docsify-clidocsify -v//查看版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="新建项目文件夹"><a href="#新建项目文件夹" class="headerlink" title="新建项目文件夹"></a>新建项目文件夹</h3><p>接下来我们从零开始来新建一个本地的项目文件夹。</p><p>可以在任何地方新建，名字也可以随便命名，这里取名为<code>repository</code>，代表的意思是知识仓库</p><h3 id="初始化网站"><a href="#初始化网站" class="headerlink" title="初始化网站"></a>初始化网站</h3><p>进入到上述新建的项目文件夹<code>repository</code>，执行如下命令即可初始化网站，非常简单：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docsify init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>初始化成功之后，命令行里也会输出对应初始化成功的打印信息。</p><h3 id="启动本地预览"><a href="#启动本地预览" class="headerlink" title="启动本地预览"></a>启动本地预览</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docsify serve<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="./assets/Docsify/202202232337249.png" alt="图片"></p><p>我们会发现docsify会帮我们在<code>localhost:3000</code>启动一个知识库网站。</p><p>然后在浏览器打开<code>http://localhost:3000</code>即可看见网站效果。</p><p><img src="./assets/Docsify/202202232337010.png" alt="图片"></p><p>当然，这时候的页面看起来非常简陋，几乎什么也没有。</p><p>接下来我们来看一看网站的文件结构，这个工具是如何做到这么快就可以启动一个网站的呢。</p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>上文执行完<code>docsify init</code>命令成功初始化网站后，docsify会在项目文件夹里自动帮我们生成以下两个文件：</p><ul><li><code>index.html</code>：网站主入口文件和配置文件</li><li><code>README.md</code>：网站内容文件。支持Markdown格式，docsify可以帮我们把该Markdown源文件渲染成网页进行展示。</li></ul><p>所以我们只需要直接编辑生成的这个README.md文件就能更新网站的内容。</p><p><img src="./assets/Docsify/202202232339692.png" alt="image-20220223233926608"></p><p><code>coverpage</code>：封面</p><p><code>navbar</code>：导航栏</p><p><code>sidebar</code>：侧边栏</p><p><code>logo.ico</code>：网页图标</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><a href="https://blog.csdn.net/Lonelyooacz/article/details/103490545">https://blog.csdn.net/Lonelyooacz/article/details/103490545</a></p><h3 id="页面和URL路径"><a href="#页面和URL路径" class="headerlink" title="页面和URL路径"></a>页面和URL路径</h3><p>如果需要创建多个页面，或者需要多级路由的网站，在docsify里能很容易实现。</p><p>打比方说，你的目录结构如下：</p><pre class="line-numbers language-none"><code class="language-none">.└── repository    ├── README.md    ├── test.md    └── content        ├── README.md        └── bigdata.md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么对应的页面访问URL地址将是:</p><pre class="line-numbers language-none"><code class="language-none">repository/README.md          =&gt;  http://127.0.0.1:3000/repository/test.md            =&gt;  http://127.0.0.1:3000/testrepository/content/README.md  =&gt; http://127.0.0.1:3000/content/repository/content/bigdata.md =&gt; http://127.0.0.1:3000/content/bigdata<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>所以只需要在项目目录里添加其他<code>.md</code>文件，或者目录层级，即可形成多页面网站，非常简单易懂！</p><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><p>docsify提供了多套主题可供使用。</p><p>直接修改<code>index.html</code>中引入的CSS文件即可修改网站主题。</p><p><img src="./assets/Docsify/202202232343575.png" alt="图片"></p><p>目前提供有好几套主题可供选择：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/themes/vue.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/themes/buble.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/themes/dark.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/themes/pure.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/themes/dolphin.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置封面"><a href="#设置封面" class="headerlink" title="设置封面"></a>设置封面</h3><p>像上文刚刚这样创建出来的网站其实是没有封面的，如果需要添加封面，可以通过在<code>index.html</code>中设置<code>coverpage</code>参数为<code>true</code>来实现：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">coverpage: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样既可开启封面功能。</p><p><img src="./assets/Docsify/202202232342034.png" alt="图片"></p><p>封面功能开启之后，我们可以直接去项目文件夹里创建一个<code>_coverpage.md</code>文件来制作封面内容。</p><p><img src="./assets/Docsify/202202232342150.png" alt="图片"></p><p>比如我们这地方，添加了<code>_coverpage.md</code>文件之后，在里面写上如下几段文字：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">![<span class="token content">logo</span>](https://cdn.jsdelivr.net/gh/justacoder99/r2coding@master/img/r2coding_logo_cover.7hb2s8l3eqk0.png)</span><span class="token list punctuation">-</span> 本站取名为r2coding，即Road To Coding，意为编程自学之路，是自学编程以来所用资源和分享内容的大聚合。旨在为编程自学者提供一系列清晰的学习路线、靠谱的资源、高效的工具、和务实的文章，方便自己也方便他人。<span class="token bold"><span class="token punctuation">**</span><span class="token content">网站内容会持续保持更新，欢迎收藏品鉴！</span><span class="token punctuation">**</span></span><span class="token title important"><span class="token punctuation">##</span> 记住，一定要善用 </span><span class="token code keyword">`Ctrl+F`</span> 哦！<span class="token url">[<span class="token content"><span class="token bold"><span class="token punctuation">**</span><span class="token content">联系作者</span><span class="token punctuation">**</span></span></span>](https://github.com/rd2coding/Road2Coding)</span><span class="token url">[<span class="token content"><span class="token bold"><span class="token punctuation">**</span><span class="token content">开启阅读</span><span class="token punctuation">**</span></span></span>](README.md)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在网页上渲染之后，即可看到如下效果：</p><p><img src="./assets/Docsify/202202232342169.png" alt="图片"></p><p>所以其操作是非常简单的。</p><h3 id="设置导航栏"><a href="#设置导航栏" class="headerlink" title="设置导航栏"></a>设置导航栏</h3><p>像上文刚刚这样创建出来的网站顶部右上角其实是没有导航栏的，如果需要添加导航栏，可以通过在<code>index.html</code>中设置<code>loadNavbar</code>参数来开启：</p><pre class="line-numbers language-none"><code class="language-none">loadNavbar: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="./assets/Docsify/202202232343460.png" alt="图片"></p><p>导航栏功能开启之后，我们可以直接去项目文件夹里创建一个<code>_navbar.md</code>文件来制作导航栏菜单内容。</p><p><img src="./assets/Docsify/202202232342788.png" alt="图片"></p><p>比如我们这地方，添加了<code>_navbar.md</code>导航栏之后的效果大致如下：</p><p><img src="./assets/Docsify/202202232342908.png" alt="图片"></p><h3 id="设置章鱼猫"><a href="#设置章鱼猫" class="headerlink" title="设置章鱼猫"></a>设置章鱼猫</h3><p>可以通过在<code>index.html</code>中设置<code>repo</code>参数来开启网站右上角的章鱼猫链接的小图标功能</p><pre class="line-numbers language-none"><code class="language-none">repo: 'https://github.com/rd2coding/Road2Coding'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="./assets/Docsify/202202232342609.png" alt="图片"></p><p>设置完成后的效果如下，还是很萌的，鼠标移到上面，小尾巴还能摇一摇。</p><p><img src="./assets/Docsify/202202232342876.png" alt="图片"></p><h3 id="设置logo"><a href="#设置logo" class="headerlink" title="设置logo"></a>设置logo</h3><p>可以通过在<code>index.html</code>中设置<code>name</code>参数或者<code>logo</code>参数来开启网站侧边栏左上角的标题或者logo显示功能：</p><pre class="line-numbers language-none"><code class="language-none">name: 'Road To Coding',logo: 'https://cdn.jsdelivr.net/gh/justacoder99/r2coding@master/img/r2coding_logo_sidebar.1na4hwjnopq8.png'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="./assets/Docsify/202202232342324.png" alt="图片"></p><p>比如这地方设置了logo图片之后，效果大致如下：</p><p><img src="./assets/Docsify/202202232342942.png" alt="图片"></p><h3 id="设置tabs"><a href="#设置tabs" class="headerlink" title="设置tabs"></a>设置tabs</h3><p>在<code>index.html</code>中添加 docsify-tabs 插件。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- docsify (latest v4.x.x)--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/docsify@4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- docsify-tabs (latest v1.x.x) --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/docsify-tabs@1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看<a href="https://jhildenbiddle.github.io/docsify-tabs/#/?id=options">选项</a>部分并根据需要进行配置。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">window.$docsify = {  // ...  tabs: {    persist    : true,      // default    sync       : true,      // default    theme      : 'classic', // default    tabComments: true,      // default    tabHeadings: true       // default  }};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看<a href="https://jhildenbiddle.github.io/docsify-tabs/#/?id=customization">自定义</a>部分并根据需要设置主题属性。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">  <span class="token selector">:root</span> <span class="token punctuation">{</span>    <span class="token property">--docsifytabs-border-color</span><span class="token punctuation">:</span> #ededed<span class="token punctuation">;</span>    <span class="token property">--docsifytabs-tab-highlight-color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用HTML 注释定义选项卡集<code>tabs:start</code>。<code>tabs:end</code></p><p>HTML 注释用于标记选项卡集的开始和结束。当 Markdown 在您的 docsify 站点（例如 GitHub、GitLab 等）之外呈现为 HTML 时，使用 HTML 注释可防止显示与选项卡相关的标记。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token comment">&lt;!-- tabs:start --&gt;</span>...<span class="token comment">&lt;!-- tabs:end --&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用<strong>标题 + 粗体</strong>标记定义选项卡集中的选项卡。</p><p>标题文本将用作选项卡标签，所有后续内容将与该选项卡相关联，直到下一个选项卡或<code>tab:end</code>评论的开始。使用标题 + 粗体标记允许使用标准标记定义选项卡，并确保选项卡内容在您的 docsify 站点（例如 GitHub、GitLab 等）之外呈现时显示带有标题。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token comment">&lt;!-- tabs:start --&gt;</span><span class="token title important"><span class="token punctuation">####</span> **English**</span>Hello!<span class="token title important"><span class="token punctuation">####</span> **French**</span>Bonjour!<span class="token title important"><span class="token punctuation">####</span> **Italian**</span>Ciao!<span class="token comment">&lt;!-- tabs:end --&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><!-- tabs:start --><h4 id="English"><a href="#English" class="headerlink" title="English"></a><strong>English</strong></h4><p>Hello!</p><h4 id="French"><a href="#French" class="headerlink" title="French"></a><strong>French</strong></h4><p>Bonjour!</p><h4 id="Italian"><a href="#Italian" class="headerlink" title="Italian"></a><strong>Italian</strong></h4><p>Ciao!</p><!-- tabs:end --><p>效果：</p><p><img src="./assets/Docsify/202202240004587.png" alt="image-20220224000446534"></p><h3 id="alert插件"><a href="#alert插件" class="headerlink" title="alert插件"></a>alert插件</h3><p><a href="https://github.com/fzankl/docsify-plugin-flexible-alerts">https://github.com/fzankl/docsify-plugin-flexible-alerts</a></p><h3 id="首页html文件"><a href="#首页html文件" class="headerlink" title="首页html文件"></a>首页html文件</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Tian's Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge,chrome=1<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Description<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0"&gt; --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./5.ico<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/lib/themes/vue.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 谷歌站点收录 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>google-site-verification<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qTFCf1hJ275saQ7H1kin5t2DVpznBKAj0Gi50XMOVMo<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!-- 百度站点收录--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baidu-site-verification<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SZyWUIzWiU<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!-- gittalk --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/gitalk/dist/gitalk.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 支持 LaTex 语言 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!-- &lt;link rel="stylesheet" href="https://wugenqiang.js.org/src/css/iconfont.css"&gt; --&gt;</span>  <span class="token comment">&lt;!-- &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/custom.css"&gt; --&gt;</span>    <span class="token comment">&lt;!-- alert --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/sweetalert.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>text/css<span class="token punctuation">'</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>all<span class="token punctuation">'</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!-- 友链 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/css/friends-link.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 自定义特色样式：by myself --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/css/me.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token atrule"><span class="token rule">@import</span> <span class="token string">'vuetian.css'</span><span class="token punctuation">;</span></span>    <span class="token comment">/* @import 'base.user.css'; */</span>    <span class="token comment">/*加重描述strong*/</span>    <span class="token selector">.markdown-section strong</span> <span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>19<span class="token punctuation">,</span> 192<span class="token punctuation">,</span> 235<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.app-nav</span><span class="token punctuation">{</span>      <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 10px 40px 10px 0px<span class="token punctuation">;</span><span class="token comment">/*上、右、下、左*/</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 325px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/* background-color: #fff; */</span>      <span class="token property">height</span><span class="token punctuation">:</span> 55px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>22<span class="token punctuation">,</span> 168<span class="token punctuation">,</span> 107<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/* border-bottom: 1px solid #eee; */</span>    <span class="token punctuation">}</span>    <span class="token comment">/*.github-corner{      position: absolute;      z-index: 999999;      top: 0;    }*/</span>    <span class="token selector">.markdown-section code</span> <span class="token punctuation">{</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Helvetica Neue"</span><span class="token punctuation">,</span>Helvetica<span class="token punctuation">,</span><span class="token string">"Hiragino Sans GB"</span><span class="token punctuation">,</span><span class="token string">"Microsoft YaHei"</span><span class="token punctuation">,</span>Arial<span class="token punctuation">,</span>sans-serif<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 16px <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 2px<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 3px 5px<span class="token punctuation">;</span>      <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #282c34<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>184<span class="token punctuation">,</span> 101<span class="token punctuation">,</span> 208<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.markdown-section &gt; div &gt; img, .markdown-section pre</span> <span class="token punctuation">{</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> 2px 2px 20px 6px <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.markdown-section a:not(:hover)</span> <span class="token punctuation">{</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/*侧边栏*/</span>    <span class="token selector">.sidebar</span> <span class="token punctuation">{</span>      <span class="token property">padding-top</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/* aside.sidebar ul li {      margin: 0;      position: relative;    }    aside.sidebar ul li ul {      margin: 6px 0;    }    aside.sidebar ul li p {      padding-left: 22px;      font-size: 18px;      font-weight: normal;    }    aside.sidebar ul li a {      line-height: 35px;      font-size: 14px;      padding: 3px 0 3px 22px;    }    aside.sidebar ul li.active &gt; a {      font-size: 16px !important;    } */</span>    <span class="token comment">/* aside.sidebar ul li.active &gt; a:before {      content: '' !important;      position: absolute !important;      margin: 0 !important;      width: 10px !important;      height: 10px !important;      top: 15px !important;      left: 0px !important;      border-radius: 50% !important;      background-color: #fed24a !important;      box-shadow: 0 0 0 3px rgba(254, 210, 74, 0.4) !important;    } */</span>    <span class="token comment">/* 一级标题 */</span>    <span class="token comment">/* h1 span{      display:inline-block;      background: rgb(66, 185, 131);      color:#ffffff;      padding:  10px  16px;      border-radius:5px;      box-shadow: 1px 1px 3px black;    } */</span>        <span class="token comment">/*代码块背景*/</span>    <span class="token selector">p code</span><span class="token punctuation">{</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.markdown-section p.tip,    .markdown-section tr:nth-child(1n)</span> <span class="token punctuation">{</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 16px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.markdown-section h1</span> <span class="token punctuation">{</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 3rem 0 2rem 0<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.markdown-section h2</span> <span class="token punctuation">{</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 2rem 0 1rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">img,    pre</span> <span class="token punctuation">{</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/*添加代码块复制按钮样式*/</span>    <span class="token selector">.docsify-copy-code-button</span> <span class="token punctuation">{</span>      <span class="token property">background</span><span class="token punctuation">:</span> #00a1d6 <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #FFFFFF <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 13px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">::after</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #9da2fd <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 13px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.markdown-section&gt;p</span> <span class="token punctuation">{</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 16px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/*代码块头部图标 start*/</span>    <span class="token selector">.markdown-section pre:before</span> <span class="token punctuation">{</span>      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./assets/Docsify/202202280805295.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token property">background-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>      <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #1C1C1C<span class="token punctuation">;</span>      <span class="token property">background-position</span><span class="token punctuation">:</span> 10px 10px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/*代码块头部图标 end*/</span>    <span class="token selector">.markdown-section pre&gt;code</span> <span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #c0c3c1 <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Inconsolata'</span><span class="token punctuation">,</span> consolas<span class="token punctuation">,</span><span class="token string">"PingFang SC"</span><span class="token punctuation">,</span> <span class="token string">"Microsoft YaHei"</span><span class="token punctuation">,</span> monospace <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #212121 <span class="token important">!important</span><span class="token punctuation">;</span>    // #accfff  #282c34      <span class="token property">font-size</span><span class="token punctuation">:</span> 15px <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">white-space</span><span class="token punctuation">:</span> pre <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5 <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">-moz-tab-size</span><span class="token punctuation">:</span> 4 <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">-o-tab-size</span><span class="token punctuation">:</span> 4 <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">tab-size</span><span class="token punctuation">:</span> 4 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">ol, ul, li</span><span class="token punctuation">{</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 27px <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 16px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>      <span class="token selector">.markdown-section pre&gt;code</span> <span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 15px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 1.1px <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>      <span class="token selector">.markdown-section pre&gt;code</span> <span class="token punctuation">{</span>        <span class="token property">padding-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>        <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 16px <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector">pre:after</span> <span class="token punctuation">{</span>        <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span> <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector">section.cover h1</span> <span class="token punctuation">{</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">pre</span> <span class="token punctuation">{</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #212121 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>      <span class="token selector">pre code</span> <span class="token punctuation">{</span>        <span class="token comment">/*box-shadow: 2px 1px 20px 2px #aaa;*/</span>        <span class="token comment">/*border-radius: 10px !important;*/</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>      <span class="token selector">pre</span> <span class="token punctuation">{</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 3px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">padding-right</span><span class="token punctuation">:</span> 3px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> -20px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> -20px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 20px 0px #f7f7f7 <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token comment">/*代码块复制按钮默认隐藏*/</span>      <span class="token selector">.docsify-copy-code-button</span> <span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector">.advertisement</span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector">.markdown-section pre</span> <span class="token punctuation">{</span>      <span class="token property">padding-left</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">padding-right</span><span class="token punctuation">:</span> 0px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.markdown-section</span> <span class="token punctuation">{</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 3.2% <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/*修改代码块代码颜色显示*/</span>    <span class="token selector">.token.directive.keyword</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #4faee2 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.keyword</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #c678dd <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.comment</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #737c8b <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.tag</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #a589ad <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.attr-name</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #de916c <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.attr-value</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #4faee2 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.macro.property</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #4faee2 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.function</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #e6b456 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.string</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #98b755 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.punctuation</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> #c0c3c1 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.token.number</span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span>#c0c3c1  <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">a.section-link</span><span class="token punctuation">{</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> .9rem <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.advertisement</span> <span class="token punctuation">{</span>      <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>      <span class="token property">right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 110px<span class="token punctuation">;</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> -1px 0 2px 0px #c5ebda<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      <span class="token property">z-index</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.advertisement p,    h4</span> <span class="token punctuation">{</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.advertisement .Tencent_code h4</span> <span class="token punctuation">{</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #25a46a<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment">/*滚动条样式 start*/</span>    <span class="token comment">/* 滚动条宽度 */</span>    <span class="token selector">::-webkit-scrollbar</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment">/* 滚动条颜色 */</span>    <span class="token selector">::-webkit-scrollbar-thumb</span><span class="token punctuation">{</span>      <span class="token property">background</span><span class="token punctuation">:</span> #33a9dc<span class="token punctuation">;</span>      <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>#6ecd56<span class="token punctuation">,</span> #33a9dc<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 读条显示 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>🏃‍🏃‍🏃‍💨 加载中...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 右侧显示公众号 --&gt;</span>  <span class="token comment">&lt;!-- &lt;div class="aside_container"&gt;    &lt;div class="advertisement"&gt;      &lt;div class="Tencent_code"&gt;        &lt;h4&gt;关注作者公众号&lt;/h4&gt;        &lt;p style="font-size: 12px;"&gt;万千小伙伴陪你一起学&lt;/p&gt;        &lt;img src="https://cdn.jsdelivr.net/gh/wugenqiang/PictureBed/images01/20200808182633.jpg" alt="EnjoyToShare" /&gt;      &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt; --&gt;</span>      <span class="token comment">&lt;!-- gittalk --&gt;</span>  <span class="token comment">&lt;!-- &lt;script src="//cdn.jsdelivr.net/npm/docsify-edit-on-github"&gt;&lt;/script&gt;  &lt;script src="//cdn.jsdelivr.net/npm/gitalk/dist/gitalk.min.js"&gt;&lt;/script&gt; --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    window<span class="token punctuation">.</span>$docsify <span class="token operator">=</span> <span class="token punctuation">{</span>       <span class="token comment">// 项目名称</span>      name<span class="token operator">:</span> <span class="token string">'Tian'</span><span class="token punctuation">,</span>      logo<span class="token operator">:</span> <span class="token string">'./assets/Docsify/202202281213460.png'</span><span class="token punctuation">,</span>          <span class="token comment">// 仓库地址，点击右上角的Github章鱼猫头像会跳转到此地址</span>      repo<span class="token operator">:</span> <span class="token string">'https://gitee.com/tianzhendong/NoteBooks'</span><span class="token punctuation">,</span>          <span class="token comment">// 侧边栏支持，默认加载的是项目根目录下的_sidebar.md文件</span>      <span class="token comment">// loadSidebar: true,</span>          <span class="token comment">// 导航栏支持，默认加载的是项目根目录下的_navbar.md文件</span>      coverpage<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          <span class="token comment">// 最大支持渲染的标题层级</span>      maxLevel<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>          <span class="token comment">// 自定义侧边栏后默认不会再生成目录，设置生成目录的最大层级（建议配置为2-4）</span>      subMaxLevel<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>      <span class="token comment">//主题颜色</span>      <span class="token comment">// themeColor: '#33a9dc',</span>      auto2top<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">//当路线改变时,滚动到屏幕的顶部</span>      loadNavbar<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//_navbar.md如果为真，则从_navbar.md文件加载navbar ，否则从指定的路径加载</span>      mergeNavbar<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//Navbar将在小屏幕上与侧边栏合并</span>      executeScript<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//执行页面上的脚本。只解析第一个脚本标记（演示）。如果存在Vue，则默认开</span>      <span class="token comment">//subMaxLevel: 6,//在自定义边栏中添加目录（TOC)</span>      externalLinkTarget<span class="token operator">:</span> <span class="token string">'_blank'</span><span class="token punctuation">,</span> <span class="token comment">//外链打开方式：_blank表示在新标签页中打开</span>      <span class="token comment">// onlyCover: true,   //设置后封面不显示导航栏</span>      topMargin<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span><span class="token comment">//调整top</span>      <span class="token comment">//executeScript: true,//执行页面上的脚本，仅解析第一个脚本标签</span>      search<span class="token operator">:</span> <span class="token punctuation">{</span>        paths<span class="token operator">:</span> <span class="token string">'auto'</span><span class="token punctuation">,</span>        placeholder<span class="token operator">:</span> <span class="token string">'🔍 搜索'</span><span class="token punctuation">,</span>        noData<span class="token operator">:</span> <span class="token string">'😒 找不到结果'</span><span class="token punctuation">,</span>        <span class="token comment">// Headline depth, 1 - 6</span>        depth<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>        maxAge<span class="token operator">:</span> <span class="token number">86400000</span><span class="token punctuation">,</span> <span class="token comment">// 过期时间，单位毫秒，默认一天</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//添加搜索框</span>      <span class="token comment">// plugins: [</span>      <span class="token comment">//   EditOnGithubPlugin.create("https://gitee.com/tianzhendong")</span>      <span class="token comment">// ]</span>      <span class="token comment">// 谷歌分析 SEO</span>      ga<span class="token operator">:</span> <span class="token string">'UA-164658031-2'</span><span class="token punctuation">,</span>      <span class="token comment">// footer: {</span>      <span class="token comment">//   copy: '&lt;div class = "over" &gt;完结&lt;/div&gt;&lt;br/&gt;&lt;span&gt;我能想到最浪漫的事，就是我喝咖啡你付钱~😆😏 ❤️ 打赏地址：&lt;a href="https://wugenqiang.js.org/sponsor/" target="_blank"&gt;https://wugenqiang.js.org/sponsor/&lt;/a&gt;&lt;/span&gt;&lt;iframe src="https://wugenqiang.js.org/sponsor/" style="overflow-x:hidden;overflow-y:hidden; min-height:240px; width:100%;"  frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;br/&gt;&lt;span id="sitetime"&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Copyright &amp;copy; 2019 - 至今&lt;/span&gt;',</span>      <span class="token comment">//   auth: ' &lt;a href="https://wugenqiang.github.io/" target="_blank"&gt;🏷️ EnjoyToShare Blog&lt;/a&gt; &lt;span&gt; 一个人可以走的很快，但一群人才能走的更远！&lt;/span&gt;',</span>      <span class="token comment">//   pre: '&lt;hr/&gt;',</span>      <span class="token comment">//   style: 'text-align: left;',</span>      <span class="token comment">// },//添加页脚</span>      markdown<span class="token operator">:</span> <span class="token punctuation">{</span>        renderer<span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token function-variable function">code</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> lang<span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>lang <span class="token operator">===</span> <span class="token string">"dot"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> <span class="token punctuation">(</span>                      <span class="token string">'&lt;div class="viz"&gt;'</span><span class="token operator">+</span> <span class="token function">Viz</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token string">"SVG"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&lt;/div&gt;'</span>              <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">var</span> <span class="token function-variable function">pdf_renderer</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> lang<span class="token punctuation">,</span> verify</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">function</span> <span class="token function">unique_id_generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">function</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">65536</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">rand_gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>lang <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>lang<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span><span class="token string">'pdf'</span><span class="token punctuation">,</span> <span class="token string">'en'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>sensitivity<span class="token operator">:</span> <span class="token string">'base'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>verify<span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                  <span class="token keyword">var</span> divId <span class="token operator">=</span> <span class="token string">"markdown_code_pdf_container_"</span> <span class="token operator">+</span> <span class="token function">unique_id_generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">var</span> container_list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'pdf_container_list'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    container_list <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'pdf_container_list'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>                  container_list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"pdf_location"</span><span class="token operator">:</span> code<span class="token punctuation">,</span> <span class="token string">"div_id"</span><span class="token operator">:</span> divId<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'pdf_container_list'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>container_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">return</span> <span class="token punctuation">(</span>                          <span class="token string">'&lt;div style="margin-top:'</span><span class="token operator">+</span> <span class="token constant">PDF_MARGIN_TOP</span> <span class="token operator">+</span><span class="token string">'; margin-bottom:'</span><span class="token operator">+</span> <span class="token constant">PDF_MARGIN_BOTTOM</span> <span class="token operator">+</span><span class="token string">';" id="'</span><span class="token operator">+</span> divId <span class="token operator">+</span><span class="token string">'"&gt;'</span>                          <span class="token operator">+</span> <span class="token string">'&lt;a href="'</span><span class="token operator">+</span> code <span class="token operator">+</span> <span class="token string">'"&gt; Link &lt;/a&gt; to '</span> <span class="token operator">+</span> code <span class="token operator">+</span>                          <span class="token string">'&lt;/div&gt;'</span>                  <span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>              <span class="token punctuation">}</span>              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">pdf_renderer</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> lang<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token keyword">return</span> <span class="token function">pdf_renderer</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> lang<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment">//return this.origin.code.apply(this, arguments);</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>base <span class="token operator">?</span> base <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>origin<span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">}</span>      </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//unpkg.com/docsify-count/dist/countable.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- &lt;script src="//unpkg.com/docsify"&gt;&lt;/script&gt; --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js<span class="token punctuation">"</span></span> <span class="token attr-name">data-ga</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UUA-176075611-1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/lib/plugins/emoji.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/lib/plugins/search.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify-pagination/dist/docsify-pagination.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/lib/plugins/zoom-image.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- &lt;script src="//cdn.jsdelivr.net/npm/docsify/lib/plugins/gitalk.min.js"&gt;&lt;/script&gt; --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify-pagination/dist/docsify-pagination.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 代码块样式优化--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-c.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--&lt;script src="//unpkg.com/prismjs/components/prism-cpp.js"&gt;&lt;/script&gt;--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-cpp.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-css.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-docker.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-java.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-javascript.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-json.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-latex.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-sql.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-markdown.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-bash.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-php.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-scala.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-nginx.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-json.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-markdown.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/prism-python.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/js/prism-yaml.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/StaticRepo/src/js/prism-go.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/StaticRepo/src/js/prism-matlab.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- mouse click --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/click_heart.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 添加页脚 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/docsify-footer-enh.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 复制提醒 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/sweetalert.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function-variable function">oncopy</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token function">swal</span><span class="token punctuation">(</span><span class="token string">"复制成功"</span><span class="token punctuation">,</span>           <span class="token string">"若要转载或引用请务必保留原文链接，并申明来源。如果你觉得本仓库不错，那就来 GitHub 给个 Star 吧 😊   - by TianZD"</span><span class="token punctuation">,</span>           <span class="token string">"success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- &lt;script src="//cdn.jsdelivr.net/npm/docsify-katex@latest/dist/docsify-katex.js"&gt;&lt;/script&gt; --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify/lib/plugins/ga.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 复制代码--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/docsify-copy-code.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 回到顶部功能 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/jquery.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/jquery.goup.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      $<span class="token punctuation">.</span><span class="token function">goup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        trigger<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>        bottomOffset<span class="token operator">:</span> <span class="token number">52</span><span class="token punctuation">,</span>        locationOffset<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>        <span class="token comment">//title: 'TOP',</span>        titleAsText<span class="token operator">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/docsify-tabs@1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>      <span class="token comment">&lt;!-- 支持 DOT 语言 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/viz.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 支持 LaTex 语言 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.jsdelivr.net/npm/docsify-katex@latest/dist/docsify-katex.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 添加 PDF 页面展示功能 --&gt;</span>  <span class="token comment">&lt;!-- PDFObject.js is a required dependency of this plugin --&gt;</span>  <span class="token comment">&lt;!--&lt;script src="//cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js"&gt;&lt;/script&gt;--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/pdfobject.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- This is the source code of the pdf embed plugin --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/wugenqiang/NoteBook@master/plugin/docsify-pdf-embed.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- alert插件 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/docsify-plugin-flexible-alerts<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 添加网站运行时间统计 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>javascript</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"siteTime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> seconds <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> minutes <span class="token operator">=</span> seconds <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> hours <span class="token operator">=</span> minutes <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> days <span class="token operator">=</span> hours <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> years <span class="token operator">=</span> days <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> todayYear <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> todayMonth <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> todayDate <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> todayHour <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> todayMinute <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> todaySecond <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">/* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)       year - 作为date对象的年份，为4位年份值       month - 0-11之间的整数，做为date对象的月份       day - 1-31之间的整数，做为date对象的天数       hours - 0(午夜24点)-23之间的整数，做为date对象的小时数       minutes - 0-59之间的整数，做为date对象的分钟数       seconds - 0-59之间的整数，做为date对象的秒数       microseconds - 0-999之间的整数，做为date对象的毫秒数 */</span>       <span class="token keyword">var</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token constant">UTC</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">06</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//北京时间2019-06-21 22:22:22 //计划考研的日子，6月20日毕业典礼结束后，人生需要继续努力，加油，看到这句话的朋友们！</span>       <span class="token keyword">var</span> t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token constant">UTC</span><span class="token punctuation">(</span>todayYear<span class="token punctuation">,</span> todayMonth<span class="token punctuation">,</span> todayDate<span class="token punctuation">,</span> todayHour<span class="token punctuation">,</span> todayMinute<span class="token punctuation">,</span> todaySecond<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> diff <span class="token operator">=</span> t2 <span class="token operator">-</span> t1<span class="token punctuation">;</span>       <span class="token keyword">var</span> diffYears <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> years<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> diffDays <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> days<span class="token punctuation">)</span> <span class="token operator">-</span> diffYears <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> diffHours <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days<span class="token punctuation">)</span> <span class="token operator">/</span> hours<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> diffMinutes <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours<span class="token punctuation">)</span> <span class="token operator">/</span> minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> diffSeconds <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours <span class="token operator">-</span> diffMinutes <span class="token operator">*</span> minutes<span class="token punctuation">)</span> <span class="token operator">/</span> seconds<span class="token punctuation">)</span><span class="token punctuation">;</span>       document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"sitetime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">" 本站已安全运行 "</span> <span class="token operator">+</span> diffYears <span class="token operator">+</span> <span class="token string">" 年 "</span> <span class="token operator">+</span> diffDays <span class="token operator">+</span> <span class="token string">" 天 "</span> <span class="token operator">+</span> diffHours <span class="token operator">+</span> <span class="token string">" 小时 "</span> <span class="token operator">+</span> diffMinutes <span class="token operator">+</span> <span class="token string">" 分 "</span> <span class="token operator">+</span> diffSeconds <span class="token operator">+</span> <span class="token string">" 秒 "</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://eqcn.ajz.miesnfu.com/wp-content/plugins/wp-3d-pony/live2dw/lib/L2Dwidget.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  L2Dwidget<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">"model"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token comment">//jsonpath控制显示那个小萝莉模型，</span>      <span class="token comment">//(切换模型需要改动)</span>      <span class="token comment">//https://unpkg.com/live2d-widget-model-模型名称/assets/模型名称.model.json</span>      <span class="token comment">// jsonPath: "https://unpkg.com/live2d-widget-model-koharu@1.0.5/assets/koharu.model.json",</span>      <span class="token comment">// jsonPath: "https://unpkg.com/live2d-widget-model-hijiki/assets/hijiki.model.json",</span>      <span class="token comment">// jsonPath: "https://unpkg.com/live2d-widget-model-tororo/assets/tororo.model.json",</span>      jsonPath<span class="token operator">:</span> <span class="token string">"https://unpkg.com/live2d-widget-model-wanko/assets/wanko.model.json"</span><span class="token punctuation">,</span>      <span class="token string">"scale"</span><span class="token operator">:</span> <span class="token number">1</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token string">"display"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token string">"position"</span><span class="token operator">:</span> <span class="token string">"right"</span><span class="token punctuation">,</span> <span class="token comment">//看板娘的表现位置</span>      <span class="token string">"width"</span><span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>  <span class="token comment">//小萝莉的宽度</span>      <span class="token string">"height"</span><span class="token operator">:</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token comment">//小萝莉的高度</span>      <span class="token string">"hOffset"</span><span class="token operator">:</span> <span class="token number">35</span><span class="token punctuation">,</span>      <span class="token string">"vOffset"</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">20</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token string">"mobile"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token string">"show"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token string">"scale"</span><span class="token operator">:</span> <span class="token number">0.5</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token string">"react"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token string">"opacityDefault"</span><span class="token operator">:</span> <span class="token number">0.7</span><span class="token punctuation">,</span>      <span class="token string">"opacityOnHover"</span><span class="token operator">:</span> <span class="token number">0.2</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Nginx部署准备"><a href="#Nginx部署准备" class="headerlink" title="Nginx部署准备"></a>Nginx部署准备</h2><p>对于这类网站的部署，我们当然可以部署到<code>GitHub Pages</code>服务或者<code>Gitee Pages</code>服务上去</p><p>也直接将其部署到云服务器上去。</p><h3 id="安装服务器软件"><a href="#安装服务器软件" class="headerlink" title="安装服务器软件"></a>安装服务器软件</h3><p>这里选用Nginx这个Web服务器来驱动网站，因为Nginx服务器除了本身非常轻量，稳定，不耗资源之外，而且性能还好，还特别能扛并发。</p><p><img src="./assets/Docsify/202202232345781.png" alt="图片"></p><ul><li>首先准备一个<code>nginx-1.17.10.tar.gz</code>的安装包，我们将其直接上传到云服务器的<code>root</code>⽬录下</li><li>在<code>/usr/local/</code>下创建<code>nginx</code>⽂件夹并进⼊</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/local/<span class="token function">mkdir</span> nginx<span class="token builtin class-name">cd</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>将Nginx安装包解压到<code>/usr/local/nginx</code>中即可</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">tar</span> zxvf /root/nginx-1.17.10.tar.gz -C ./<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解压完之后，在<code>/usr/local/nginx</code>⽬录中会出现⼀个<code>nginx-1.17.10</code>的目录</p><ul><li>预先安装额外的几个依赖</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y <span class="token function">install</span> pcre-develyum -y <span class="token function">install</span> openssl openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>接下来编译安装Nginx即可</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> nginx-1.17.10./configure<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>安装完成后， Nginx的可执行文件位置位于</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">/usr/local/nginx/sbin/nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其配置⽂件则位于：</p><pre class="line-numbers language-none"><code class="language-none">/usr/local/nginx/conf/nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>启动Nginx</li></ul><p>直接执⾏如下命令即可</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">/usr/local/nginx/sbin/nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>如果想停⽌Nginx服务，可执⾏：</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">/usr/local/nginx/sbin/nginx -s stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>如果修改了配置⽂件后想重新加载Nginx，可执⾏：</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">/usr/local/nginx/sbin/nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="上传网站到云服务器"><a href="#上传网站到云服务器" class="headerlink" title="上传网站到云服务器"></a>上传网站到云服务器</h3><p>比如，我们可以直接在<code>/usr/local/nginx/</code>目录中创建一个<code>www</code>文件夹，用于存放我们本地的项目文件夹。</p><p>然后我们可以直接将本地的项目文件夹<code>repository</code>上传到<code>www</code>目录里即可</p><p><img src="./assets/Docsify/202202232345234.png" alt="图片"></p><h3 id="Nginx配置和访问"><a href="#Nginx配置和访问" class="headerlink" title="Nginx配置和访问"></a>Nginx配置和访问</h3><p>接下来我们打开路径<code>/usr/local/nginx/conf/nginx.conf</code>下的Nginx服务器配置文件，修改其中最关键的一个<code>location /</code>下的<code>root</code>目录配置为项目文件夹的路径即可</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">location / <span class="token punctuation">{</span>    root   /usr/local/nginx/www/repository<span class="token punctuation">;</span>    index  index.html index.htm<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./assets/Docsify/202202232345404.png" alt="图片"></p><p>然后我们直接在浏览器中访问云服务器的公网IP，就可以访问该知识库网站了：</p><p><img src="./assets/Docsify/202202232345961.jpeg" alt="图片"></p><p>最后再将域名和这个IP一绑定，就OK了</p><h2 id="nginx服务器添加密码访问"><a href="#nginx服务器添加密码访问" class="headerlink" title="nginx服务器添加密码访问"></a>nginx服务器添加密码访问</h2><h3 id="通过htpasswd命令生成用户名及对应密码数据库文件"><a href="#通过htpasswd命令生成用户名及对应密码数据库文件" class="headerlink" title="通过htpasswd命令生成用户名及对应密码数据库文件"></a>通过htpasswd命令生成用户名及对应密码数据库文件</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">htpasswd -c /htpasswd/passwd.db <span class="token builtin class-name">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：此命令是使用Crypt算法生产一个加密文件passwd.db。</p><ul><li>test是用户名</li><li>/htpasswd/passwd.db 是密码文件存放地址</li><li>htpasswd apache的生产密码的插件</li></ul><p>把 passwd.db文件设置为777权限</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">chmod</span> <span class="token number">777</span> 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="nginx域名配置文件修改"><a href="#nginx域名配置文件修改" class="headerlink" title="nginx域名配置文件修改"></a>nginx域名配置文件修改</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">location / <span class="token punctuation">{</span>  root   html<span class="token punctuation">;</span>  index  index.html index.htm index index.jpg<span class="token punctuation">;</span>  auth_basic <span class="token string">'Restricted'</span><span class="token punctuation">;</span>            <span class="token comment"># 认证名称，随意填写</span>  auth_basic_user_file /htpasswd/passwd.db<span class="token punctuation">;</span>      <span class="token comment"># 认证的密码文件，需要生产。</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果没有安装apache，可以安装如下软件，就有htpasswd这个命令了</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y <span class="token function">install</span> httpd-toolsyum -y <span class="token function">install</span> httpd  <span class="token comment">#安装httpd</span><span class="token function">which</span> htpasswd  <span class="token comment">#查看是否安装</span><span class="token function">rpm</span> -qf /usr/bin/htpasswd  <span class="token comment">#查看是否安装</span>htpasswd -cb /usr/local/nginx/conf/htpasswd ceshi <span class="token number">123789</span>  <span class="token comment">#生成密码文件</span><span class="token function">chmod</span> <span class="token number">400</span> /usr/local/nginx/conf/htpasswd  <span class="token comment">#为了安全设置文件权限</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后重启nginx服务器即可实现nginx服务器添加密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#3、检查语法并重启</span>/usr/local/nginx/sbin/nginx -t/usr/local/nginx/sbin/nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="定时git-pull和重启nginx"><a href="#定时git-pull和重启nginx" class="headerlink" title="定时git pull和重启nginx"></a>定时git pull和重启nginx</h2><p>前提：www中已经设置了git仓库，这里为www下的NoteBooks文件夹</p><ul><li>拉取最新代码</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">git</span> pull<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在NoteBooks下新建自动化脚本</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> 111gitpull.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>输入：</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">cd</span> /usr/local/nginx/www/NoteBooks<span class="token function">git</span> pull/usr/local/nginx/sbin/nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>设置自动启动，这里每30分钟拉取一次</li></ul><p>进入root用户</p><p>编辑cron脚本</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">crontab</span> -e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">*/30 * * * * /usr/local/nginx/www/NoteBooks/111gitpull.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>将服务自动启动</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> /etc/rc.d/rc.local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个脚本的末尾加上：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">/sbin/service crond start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置Gittalk"><a href="#配置Gittalk" class="headerlink" title="配置Gittalk"></a>配置Gittalk</h2><h3 id="第一步：创建OAuth-Application"><a href="#第一步：创建OAuth-Application" class="headerlink" title="第一步：创建OAuth Application"></a>第一步：创建OAuth Application</h3><p>这里假设你的<a href="https://so.csdn.net/so/search?q=github&amp;spm=1001.2101.3001.7020">github</a>仓库已经创建好，docsify也已经安装使用中。申请授权地址<a href="https://github.com/settings/applications/new">点击这里</a><br>几个参数解释：</p><ul><li>Application name：项目名，随便填</li><li>Homepage URL：博客地址，也就是要访问的地址，我的是<a href="https://waldeincheng.github.io/Python-Notes">https://waldeincheng.github.io/Python-Notes</a></li><li>Application description：应用描述，随便填，我的是waldeincheng’s blog</li><li>Authorization callback URL:可以指向新的URL,或者跟上面的Homepage URL一样即可</li></ul><p>完成后会生成相应的<code>clientID</code>和<code>clientSecret</code></p><h3 id="第二步：配置gittalk"><a href="#第二步：配置gittalk" class="headerlink" title="第二步：配置gittalk"></a>第二步：配置gittalk</h3><p>docsify下有一个index.html配置文件，打开，添加上</p><pre class="line-numbers language-none"><code class="language-none"> &lt;link rel="stylesheet" href="//unpkg.com/gitalk/dist/gitalk.css"&gt;&lt;script src="//unpkg.com/docsify/lib/plugins/gitalk.min.js"&gt;&lt;/script&gt;&lt;script src="//unpkg.com/gitalk/dist/gitalk.min.js"&gt;&lt;/script&gt; &lt;script&gt;  const gitalk = new Gitalk({clientID: 'bec89b8d6a560d1fc883',clientSecret: 'd156a16ac84fee346d852d54c5bbd6b56a36469b',repo: 'Python-Notes',owner: 'WaldeinCheng',admin: ['WaldeinCheng'],// facebook-like distraction free modedistractionFreeMode: false  }) &lt;/script&gt;   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置：</p><ul><li><link rel="stylesheet" href="//unpkg.com/gitalk/dist/gitalk.css">, css文件放到index.html里的`\`标签里</li><li><code>clientID</code>:刚刚获取的ID</li><li><code>clientSecret</code>:刚刚获取的授权密码</li><li><code>repo</code>:仓库名</li><li><code>owner</code>：github用户名</li><li><code>admin</code>：[‘github用户名’]</li></ul><p>保存修改，git提交上去就行了，显示格式如图</p><h2 id="Windows自动启动Docsify"><a href="#Windows自动启动Docsify" class="headerlink" title="Windows自动启动Docsify"></a>Windows自动启动Docsify</h2><p>使用 <code>.bat</code> 的话，会显示一个短暂的黑窗口所以要想后台静默运行，需要用到 <code>.vbs</code> 脚本</p><h3 id="创建vbs脚本"><a href="#创建vbs脚本" class="headerlink" title="创建vbs脚本"></a>创建vbs脚本</h3><p>在docsify目录下新建一个vbs文件，内容如下</p><pre class="line-numbers language-vbscript" data-language="vbscript"><code class="language-vbscript">set ws=WScript.CreateObject("WScript.Shell")ws.Run "docsify serve",0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>该脚本含义为在当前目录下执行 <code>docsify serve</code> 命令</p><h3 id="开启启动"><a href="#开启启动" class="headerlink" title="开启启动"></a>开启启动</h3><p>windows 开机会自动调用下列两个文件夹下的可执行文件</p><p>用户目录的自启文件夹：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意用户名，每个用户都不相同</p></blockquote><p>所有用户都会执行的全局自启文件夹</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在脚本上右键创建快捷方式，然后将这个快捷方式放到上述两个文件夹任意一个即可</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建教程 </tag>
            
            <tag> Docsify </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown</title>
      <link href="posts/96be88e3.html"/>
      <url>posts/96be88e3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[toc]</p><h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><h2 id="Markdown索引"><a href="#Markdown索引" class="headerlink" title="Markdown索引"></a>Markdown索引</h2><h3 id="索引文件夹"><a href="#索引文件夹" class="headerlink" title="索引文件夹"></a>索引文件夹</h3><p><a href="%E3%80%902%E3%80%91%E5%AD%A6%E4%B9%A0/%E6%95%88%E7%8E%87">效率</a></p><h3 id="索引文件"><a href="#索引文件" class="headerlink" title="索引文件"></a>索引文件</h3><p><a href="%E3%80%902%E3%80%91%E5%AD%A6%E4%B9%A0%5C%E6%95%88%E7%8E%87%5Cmarkdown.md">markdown</a></p><h3 id="图片超链接"><a href="#图片超链接" class="headerlink" title="图片超链接"></a>图片超链接</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://mp.weixin.qq.com/s/ePhaYezFblgt0NgbvtWqww<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/justacoder99/r2coding@master/img/localsoftware.2x9vakmja2g.png<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p align="left">    <a href="https://mp.weixin.qq.com/s/ePhaYezFblgt0NgbvtWqww" target="_blank">        <img src="https://cdn.jsdelivr.net/gh/justacoder99/r2coding@master/img/localsoftware.2x9vakmja2g.png" width="">    </a></p><h2 id="Markdown插入图片"><a href="#Markdown插入图片" class="headerlink" title="Markdown插入图片"></a>Markdown插入图片</h2><h3 id="直接插入"><a href="#直接插入" class="headerlink" title="直接插入"></a>直接插入</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">![<span class="token content">图片描述关键词</span>](图片链接地址)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><a href="https://link.zhihu.com/?target=https://www.jianshu.com/p/b69950a49ae2">PicGo + Gitee(码云)实现免费markdown图床</a></strong></p><p><img src="./assets/markdown/202202111357847.png"></p><h3 id="HTML插入-排版"><a href="#HTML插入-排版" class="headerlink" title="HTML插入-排版"></a>HTML插入-排版</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://gitee.com/tianzhendong/img/raw/master//images/202202111342399.png<span class="token punctuation">"</span></span>         <span class="token attr-name">width</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>25%<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>    这是图注<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><center>    <img src="https://gitee.com/tianzhendong/img/raw/master//images/202202111342399.png" width="25%">    <img src="https://gitee.com/tianzhendong/img/raw/master//images/202202111342399.png" width="25%">    <br>    这是图注</center><h2 id="Markdown插入音频"><a href="#Markdown插入音频" class="headerlink" title="Markdown插入音频"></a>Markdown插入音频</h2><h3 id="使用audio-标签"><a href="#使用audio-标签" class="headerlink" title="使用audio 标签"></a>使用audio 标签</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>audio<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mp3<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>音频地址<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><audio id="audio" controls="" preload="none">      <source id="mp3" src="https://i.y.qq.com/v8/playsong.html?songid=332928560&amp;songtype=0#webchat_redirect"></audio><h3 id="使用iframe标签"><a href="#使用iframe标签" class="headerlink" title="使用iframe标签"></a>使用iframe标签</h3><p>我们以网易云音乐为例 1.首先在网易云音乐播放界面，点击生成外链播放器</p><p><img src="./assets/markdown/202202111119569.png" alt="image-20220211111954460"></p><p><img src="./assets/markdown/202204171928201.png" alt="image-20220211112012621"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1858139145&amp;auto=0&amp;height=66"></iframe><h2 id="Markdown插入视频"><a href="#Markdown插入视频" class="headerlink" title="Markdown插入视频"></a>Markdown插入视频</h2><h3 id="html中的iframe标签"><a href="#html中的iframe标签" class="headerlink" title="html中的iframe标签"></a>html中的iframe标签</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>视频或者网页路径<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>600</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>800</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 相当于是子网页 --&gt;</span><span class="token comment">&lt;!-- B站分享链接提供 --&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><iframe src="//player.bilibili.com/player.html?aid=87731293&amp;bvid=BV1E7411b7w4&amp;cid=149892227&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=1" allowfullscreen="true" width="100%" height="450" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe><h3 id="html中的video标签"><a href="#html中的video标签" class="headerlink" title="html中的video标签"></a>html中的video标签</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- mp4格式 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">poster</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>封面<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mp4<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mp4格式视频<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video/mp4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>videos</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- webm格式 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">poster</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>封面<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webm<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webm格式视频<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video/webm<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>videos</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ovg格式 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">poster</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>封面<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ogv<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ogv格式视频<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video/ogv<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>videos</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="如何优雅地在Markdown中输入数学公式"><a href="#如何优雅地在Markdown中输入数学公式" class="headerlink" title="如何优雅地在Markdown中输入数学公式"></a>如何优雅地在Markdown中输入数学公式</h2><p><a href="https://blog.csdn.net/m0_37167788/article/details/78809779?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.pc_relevant_default&amp;utm_relevant_index=2">来自CSDN文章</a></p><h3 id="基础部分"><a href="#基础部分" class="headerlink" title="基础部分"></a>基础部分</h3><h4 id="公式标记"><a href="#公式标记" class="headerlink" title="公式标记"></a>公式标记</h4><p>在Markdown中，有两种输入公式的方法：一是行内公式（inline），用一对美元符号<code>$</code>包裹。二是整行公式（displayed），用一对紧挨的两个美元符号<code>$$</code>包裹。</p><p>这是一个行内公式$E=mc^2$，写法是：<code>$E=mc^2$</code>。</p><p>这是一个整行公式：</p><p>写法是：</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}<br>$$</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h4><table><thead><tr><th>名称</th><th>大写</th><th>Tex</th><th>小写</th><th>Tex</th></tr></thead><tbody><tr><td>alpha</td><td>$A$</td><td>A</td><td>$\alpha$</td><td>\alpha</td></tr><tr><td>beta</td><td>$B$</td><td>B</td><td>$beat$</td><td>\beat</td></tr><tr><td>gamma</td><td>$\Gamma$</td><td>\Gamma</td><td>$\gamma$</td><td>\gamma</td></tr><tr><td>delta</td><td>$\Delta$</td><td>\Delta</td><td>$\delta$</td><td>\delta</td></tr><tr><td>epsilon</td><td>$E$</td><td>E</td><td>$\epsilon$</td><td>\epsilon</td></tr><tr><td>zeta</td><td>$Z$</td><td>Z</td><td>$\zeta$</td><td>\zeta</td></tr><tr><td>eta</td><td>$H$</td><td>H</td><td>$\eta$</td><td>\eta</td></tr><tr><td>theta</td><td>$\Theta$</td><td>\Theta</td><td>$\theta$</td><td>\theta</td></tr><tr><td>iota</td><td>$I$</td><td>I</td><td>$\iota$</td><td>\iota</td></tr><tr><td>kappa</td><td>$K$</td><td>K</td><td>$\kappa$</td><td>\kappa</td></tr><tr><td>lambda</td><td>$\Lambda$</td><td>\Lambda</td><td>$\lambda$</td><td>\lambda</td></tr><tr><td>mu</td><td>$M$</td><td>M</td><td>$\mu$</td><td>\mu</td></tr><tr><td>nu</td><td>$N$</td><td>N</td><td>$\nu$</td><td>\nu</td></tr><tr><td>xi</td><td>$\Xi$</td><td>\Xi</td><td>$\xi$</td><td>\xi</td></tr><tr><td>omicron</td><td>$O$</td><td>O</td><td>$\omicron$</td><td>\omicron</td></tr><tr><td>pi</td><td>$\Pi$</td><td>\Pi</td><td>$\pi$</td><td>\pi</td></tr><tr><td>rho</td><td>$P$</td><td>P</td><td>$\rho$</td><td>\rho</td></tr><tr><td>sigma</td><td>$\Sigma$</td><td>\Sigma</td><td>$\sigma$</td><td>\sigma</td></tr><tr><td>tau</td><td>$T$</td><td>T</td><td>$\tau$</td><td>\tau</td></tr><tr><td>upsilon</td><td>$\Upsilon$</td><td>\Upsilon</td><td>$\upsilon$</td><td>\upsilon</td></tr><tr><td>phi</td><td>$\Phi$</td><td>\Phi</td><td>$\phi$</td><td>\phi</td></tr><tr><td>chi</td><td>$X$</td><td>X</td><td>$\chi$</td><td>\chi</td></tr><tr><td>psi</td><td>$\Psi$</td><td>\Psi</td><td>$\psi$</td><td>\psi</td></tr><tr><td>omega</td><td>$\Omega$</td><td>\Omega</td><td>$\omega$</td><td>\omega</td></tr></tbody></table><h4 id="上标与下标"><a href="#上标与下标" class="headerlink" title="上标与下标"></a>上标与下标</h4><p>上标和下标分别使用<code>^</code>和<code>_</code>来表示。例如<code>x_i^2</code>：$x_i^2$，<code>\log_2 x</code>：$\log_2 x$。</p><p>默认情况下，<strong>上下标符号仅仅对下一个组起作用</strong>。一个组即单个字符或者使用<code>{}</code>包裹起来的内容。也就是说，如果使用<code>10^10</code>会得到$10^10$，而<code>10^{10}</code>才是$10^{10}$。同时，大括号还能消除二义性，如<code>x^5^6</code>会显示错误，必须使用大括号来界定<code>^</code>的结合性，如<code>{x^5}^6</code>${x^5}^6$或者<code>x^{5^6}</code>：$x^{5^6}$。注意区分<code>x_i^2</code>：$x_i^2$和<code>x_{i_2}</code>：$x_{i_2}$。</p><p>另外，如果要在左右两边都有上下标，可以用<code>\sideset</code>来表示，如<code>\sideset{^1_2}{^3_4}\bigotimes</code>：$\sideset{^1_2}{^3_4}\bigotimes$。</p><h4 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h4><ul><li><strong>小括号与方括号：</strong>使用原始的<code>()</code>和<code>[]</code>即可。如<code>(2+3)[4+4]</code>：$(2+3)[4+4]$。</li><li><strong>大括号：</strong>由于大括号<code>{}</code>被用来分组，因此需要使用<code>\{</code>和<code>\}</code>表示大括号，也可以使用<code>\lbrace</code>和<code>\rbrace</code>来表示。如<code>\{a*b\}</code>或者<code>\lbrace a*b \rbrace</code>，都会显示为$\lbrace a*b \rbrace$。</li><li><strong>尖括号：</strong>使用<code>\langle</code>和<code>\rangle</code>分别表示左尖括号和右尖括号。如<code>\langle x \rangle</code>：$\langle x \rangle$。</li><li><strong>上取整：</strong>使用<code>\lceil</code>和<code>\rceil</code>表示。如<code>\lceil x \rceil</code>：$\lceil x \rceil$。</li><li><strong>下取整：</strong>使用<code>\lfloor</code>和<code>\rfloor</code>表示。如<code>\lfloor x \rfloor</code>：$\lfloor x \rfloor$。</li></ul><p>需要注意的是，原始括号并不会随着公式大小缩放。如<code>(\frac12)</code>：。可以使用<code>\left( ...\right)</code>来自适应的调整括号。如<code>\left( \frac12 \right)</code>：$\left( \frac12 \right)$。可以明显看出，后一组公式中的括号是经过缩放的。</p><h4 id="求和与积分"><a href="#求和与积分" class="headerlink" title="求和与积分"></a>求和与积分</h4><p><code>\sum</code>用来表示求和符号，其下标表示求和下限，上标表示上线。如<code>\sum_1^n</code>：$\sum_1^n$。</p><p><code>\int</code>用来表示积分符号，同样地，其上下标表示积分的上下限。如<code>\int_1^\infty</code>：$\int_1^\infty$。</p><p>与此类似的符号还有，<code>\prod</code>：$\prod$，<code>\bigcup</code>：$\bigcup$，<code>\bigcap</code>：$\bigcap$，<code>\iint</code>：$\iint$。</p><h4 id="分式与根式"><a href="#分式与根式" class="headerlink" title="分式与根式"></a>分式与根式</h4><p>分式有两种表示方法。第一种，使用<code>\frac ab</code>，其中<code>\frac</code>作用于气候的两个组a和b，结果为$\frac ab$。如果分子或分母不是单个字符，需要使用<code>{}</code>来分组。第二种，使用<code>\over</code>来分隔一个组的前后两部分，如<code>{a+1\over b+1}</code>：${a+1\over b+1}$。</p><p>根式使用<code>\sqrt[a]b</code>来表示。其中，方括号内的值用来表示开几次方，省略方括号则表示开方，如<code>\sqrt[4]{\frac xy}</code>：$\sqrt[4]{\frac xy}$，<code>\sqrt{x^3}</code>：$\sqrt{x^3}$。</p><h4 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h4><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\left</span><span class="token punctuation">[</span> <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span>x11 <span class="token punctuation">&amp;</span> x12 <span class="token function selector">\\</span>x21 <span class="token punctuation">&amp;</span> x22<span class="token function selector">\\</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span> <span class="token function selector">\right</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>前后用\left和\right包围，[]标识用方括号<br>$$<br>\left[ \begin{matrix}<br>x11 &amp; x12 \x21 &amp; x22\<br>\end{matrix} \right]<br>$$</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\left</span><span class="token punctuation">[</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span>p_<span class="token punctuation">{</span>11<span class="token punctuation">}</span><span class="token punctuation">&amp;</span>p_<span class="token punctuation">{</span>12<span class="token punctuation">}</span><span class="token function selector">\\</span>p_<span class="token punctuation">{</span>21<span class="token punctuation">}</span><span class="token punctuation">&amp;</span>p_<span class="token punctuation">{</span>22<span class="token punctuation">}</span><span class="token function selector">\\</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span><span class="token function selector">\right</span><span class="token punctuation">]</span>_k^-=<span class="token function selector">\left</span><span class="token punctuation">[</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span>1<span class="token punctuation">&amp;</span>dt<span class="token function selector">\\</span>0<span class="token punctuation">&amp;</span>1<span class="token function selector">\\</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span><span class="token function selector">\right</span><span class="token punctuation">]</span><span class="token function selector">\left</span><span class="token punctuation">[</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span>p_<span class="token punctuation">{</span>11<span class="token punctuation">}</span><span class="token punctuation">&amp;</span>p_<span class="token punctuation">{</span>12<span class="token punctuation">}</span><span class="token function selector">\\</span>p_<span class="token punctuation">{</span>21<span class="token punctuation">}</span><span class="token punctuation">&amp;</span>p_<span class="token punctuation">{</span>22<span class="token punctuation">}</span><span class="token function selector">\\</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span><span class="token function selector">\right</span><span class="token punctuation">]</span>_<span class="token punctuation">{</span>k-1<span class="token punctuation">}</span><span class="token function selector">\left</span><span class="token punctuation">[</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span>1<span class="token punctuation">&amp;</span>0<span class="token function selector">\\</span>dt<span class="token punctuation">&amp;</span>1<span class="token function selector">\\</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span><span class="token function selector">\right</span><span class="token punctuation">]</span>+<span class="token function selector">\left</span><span class="token punctuation">[</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span>Q_<span class="token punctuation">{</span>11<span class="token punctuation">}</span><span class="token punctuation">&amp;</span>Q_<span class="token punctuation">{</span>12<span class="token punctuation">}</span><span class="token function selector">\\</span>Q_<span class="token punctuation">{</span>21<span class="token punctuation">}</span><span class="token punctuation">&amp;</span>Q_<span class="token punctuation">{</span>22<span class="token punctuation">}</span><span class="token function selector">\\</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">matrix</span><span class="token punctuation">}</span><span class="token function selector">\right</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\left[\begin{matrix}p_{11}&amp;p_{12}\p_{21}&amp;p_{22}\\end{matrix}\right]<em>k^-=\left[\begin{matrix}1&amp;dt\0&amp;1\\end{matrix}\right]\left[\begin{matrix}p</em>{11}&amp;p_{12}\p_{21}&amp;p_{22}\\end{matrix}\right]<em>{k-1}\left[\begin{matrix}1&amp;0\dt&amp;1\\end{matrix}\right]+\left[\begin{matrix}Q</em>{11}&amp;Q_{12}\Q_{21}&amp;Q_{22}\\end{matrix}\right]<br>$$</p><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><ul><li>使用<code>\it</code>显示意大利体（公式默认字体）：$ACDEFGHIJKLMnopqrstuvwxyz$。</li><li>使用<code>\mathbb</code>或<code>\Bbb</code>显示黑板粗体（黑板黑体），如<code>\mathbb{CHNQRZ}</code>：$\mathbb{CHNQRZ}$。</li><li>使用<code>\mathbf</code>或<code>\bf</code>示黑体：$\bf ABCDEFGHIJKLMnopqrstuvwxyzABCDEFGHIJKLMnopqrstuvwxyz$。</li><li>使用<code>\mathtt</code>或<code>\tt</code>显示打印机字体：$\tt{ABCDEFGHIJKLMnopqrstuvwxyz}$</li></ul><h3 id="MarkDown符号大全"><a href="#MarkDown符号大全" class="headerlink" title="MarkDown符号大全"></a>MarkDown符号大全</h3><p><img src="./assets/markdown/20171219090613513.gif" alt="这里写图片描述"></p><p><img src="./assets/markdown/20171219090626403.gif" alt="img"></p><p><img src="./assets/markdown/20171219090708939.gif" alt="img"></p><p><img src="./assets/markdown/20171219090742617.gif" alt="这里写图片描述"></p><p><img src="./assets/markdown/20171219090751456.gif" alt="这里写图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 效率 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LuckyBlog开源搭建教程-转载</title>
      <link href="posts/d74d8b76.html"/>
      <url>posts/d74d8b76.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来自<a href="http://www.luckyzmj.cn/">Lucky的个人网站</a></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前在<a href="https://www.bilibili.com/">B站</a>上发布了个人博客的视频，播放量也破千了，有网友私聊也想要搭建一个这样的博客。经过一段时间的准备，现将本人博客的源代码公布出来，大家只需要根据以下的步骤，即可快速搭建一个漂亮完善的博客。</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518215948.png"></p><h3 id="0x01-LuckyBlog-介绍"><a href="#0x01-LuckyBlog-介绍" class="headerlink" title="0x01 LuckyBlog 介绍"></a>0x01 LuckyBlog 介绍</h3><p>上一个LuckyBlog版本发布于2020年的9月份，是在 <a href="https://sunhwee.com/">洪卫の博客</a> 基础上进行修改的。自从发布以来有很多网友都私信搭建了博客，同时也发现了旧版本中存在的一些问题需要解决，例如：搜索框不适配XML代码搜索，部分图片失效，代码块问题以及各种小问题。现在将最新的LuckyBlog版本代码发布出来，修复改进了不少的BUG，使其更加稳定运行。同时完善了博客的基础功能，例如：音乐、视频、相册、百宝箱等页面。同时增加了不少的新功能，例如：适配Hexo5.x、黑白天浏览模式、仿Windows页面，站点统计等。</p><ul><li>博客演示地址：<a href="http://luckyzmj.cn/">http://luckyzmj.cn/</a></li><li>开源项目地址：<a href="https://github.com/LuckyZmj/LuckyBlog">https://github.com/LuckyZmj/LuckyBlog</a></li></ul><p><strong>主题特性</strong></p><ul><li><input checked="" disabled="" type="checkbox"> 简单漂亮，文章内容美观易读</li><li><input checked="" disabled="" type="checkbox"> <a href="https://material.io/">Material Design</a> 设计</li><li><input checked="" disabled="" type="checkbox"> 响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li><input checked="" disabled="" type="checkbox"> 首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li><input checked="" disabled="" type="checkbox"> 瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li><input checked="" disabled="" type="checkbox"> 时间轴式的归档页</li><li><input checked="" disabled="" type="checkbox"> <code>词云</code>的标签页和<code>雷达图</code>的分类页</li><li><input checked="" disabled="" type="checkbox"> 丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li><input checked="" disabled="" type="checkbox"> 可自定义的数据的友情链接页面</li><li><input checked="" disabled="" type="checkbox"> 支持文章置顶和文章打赏</li><li><input checked="" disabled="" type="checkbox"> 支持 <code>MathJax</code></li><li><input checked="" disabled="" type="checkbox"> <code>TOC</code> 目录，优化了目录显示效果</li><li><input checked="" disabled="" type="checkbox"> 可设置复制文章内容时追加版权信息</li><li><input checked="" disabled="" type="checkbox"> 可设置阅读文章时做密码验证</li><li><input checked="" disabled="" type="checkbox"> <a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Valine</code>）</li><li><input checked="" disabled="" type="checkbox"> 集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li><input checked="" disabled="" type="checkbox"> 支持在首页的音乐播放和视频播放功能</li><li><input checked="" disabled="" type="checkbox"> 修改了原主题以及基础主题中的一些<code>BUG</code></li><li><input checked="" disabled="" type="checkbox"> 加入图片懒加载功能，在根目录配置文件开启和关闭</li><li><input checked="" disabled="" type="checkbox"> 增加<code>留言板</code>功能   </li><li><input checked="" disabled="" type="checkbox"> 在关于板块,加入<code>简历</code>功能页</li><li><input checked="" disabled="" type="checkbox"> 增加完善<code>音乐</code>、<code>相册</code>、<code>视频</code>等功能页面 </li><li><input checked="" disabled="" type="checkbox"> 支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情</li><li><input checked="" disabled="" type="checkbox"> 增加网站运行时间显示</li><li><input checked="" disabled="" type="checkbox"> 增加<code>live2d</code> 动漫人物模型</li><li><input checked="" disabled="" type="checkbox"> 整体替换Banner图片和文章特色图片</li><li><input checked="" disabled="" type="checkbox"> 增加实用的快捷导航栏功能</li><li><input checked="" disabled="" type="checkbox"> 修改了一些控件的参数以及部分样式</li><li><input checked="" disabled="" type="checkbox"> 优化了代码显示块的效果</li><li><input checked="" disabled="" type="checkbox"> 增加页面樱花飘落动效</li><li><input checked="" disabled="" type="checkbox"> 增加鼠标点击烟花爆炸动效</li><li><input checked="" disabled="" type="checkbox"> 增加页面雪花飘落动效</li><li><input checked="" disabled="" type="checkbox"> 增加博客白云背景效果</li><li><input checked="" disabled="" type="checkbox"> 增加天气接口控件</li><li><input checked="" disabled="" type="checkbox"> 加入鼠标点击文字特效</li><li><input checked="" disabled="" type="checkbox"> 增加<code>DaoVoice</code>在线聊天插件</li><li><input checked="" disabled="" type="checkbox"> 增加博客代码、图片压缩功能</li><li><input checked="" disabled="" type="checkbox"> 增加黑白天浏览模式功能</li><li><input checked="" disabled="" type="checkbox"> 增加仿<code>Windows</code>功能</li><li><input checked="" disabled="" type="checkbox"> 增加站点统计功能</li><li><input checked="" disabled="" type="checkbox"> 增加留言版一言功能</li><li><input checked="" disabled="" type="checkbox"> 其他</li></ul><h3 id="0x02-LuckyBlog-安装"><a href="#0x02-LuckyBlog-安装" class="headerlink" title="0x02 LuckyBlog 安装"></a>0x02 LuckyBlog 安装</h3><h4 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h4><p><code>Git</code>是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。<code>Git</code>的作用是将本地的网页文件传到<code>github</code>上。</p><ul><li>Git<a href="https://git-scm.com/download">下载地址</a></li><li>Git<a href="https://www.liaoxuefeng.com/wiki/896043488029600">教程</a></li></ul><p><strong>windows：</strong> 到git官网上下载.exe文件,Download git,安装选项全部默认即可。</p><h4 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2. 安装node.js"></a>2. 安装node.js</h4><p><code>Hexo</code>是基于<code>node.js</code>编写的，所以需要安装一下<code>node.js</code>和里面的<code>npm</code>工具。</p><p><strong>windows：</strong> 到<a href="http://nodejs.cn/download/">Node.js官网</a>下载<code>.exe</code>文件，安装选项全部默认。安装好之后，按<code>Win+R</code>打开cmd命令提示符，输入<code>node -v</code>和<code>npm -v</code>，若出现版本号，则说明安装成功。</p><h4 id="3-添加npm国内源"><a href="#3-添加npm国内源" class="headerlink" title="3. 添加npm国内源"></a>3. 添加npm国内源</h4><p>使用阿里的国内镜像进行加速下载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h4><p>前面<code>git</code>和<code>nodejs</code>安装好后，就可以安装<code>hexo</code>了，你可以先创建一个文件夹<code>MyBlog</code>，用来存放自己的博客文件，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接鼠标右键<code>git bash</code>打开）。</p><p>比如我的博客文件都存放在<code>C:\MyBlog</code>目录下。</p><p>在该目录下右键点击<code>Git Bash Here</code>，打开<code>git</code>的控制台窗口，以后我们所有的操作都在<code>git</code>控制台进行，就不用<code>Windows</code>自带的<code>cmd</code>了。</p><p>定位到该目录下，输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code>。可能会有几个报错，不用理会。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p>接下来初始化一下<code>hexo</code>,即初始化我们的博客网站。例如我的在<code>C:\MyBlog</code>文件夹下的命令行中，输入<code>hexo init</code>初始化文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建完成后，指定文件夹<code>MyBlog</code>目录下有：</p><ul><li><code>node_modules</code>: 依赖包</li><li><code>public</code>：存放生成的页面</li><li><code>scaffolds</code>：生成文章的一些模板</li><li><code>source</code>：用来存放你的文章</li><li><code>themes</code>：主题**</li><li><code>_config.yml</code>: 博客的配置文件**</li></ul><p>到此为止，本地的Hexo基础环境搭建完成了。</p><h4 id="5-安装LuckyBlog"><a href="#5-安装LuckyBlog" class="headerlink" title="5. 安装LuckyBlog"></a>5. 安装LuckyBlog</h4><p>下载源代码到本地文件下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/LuckyZmj/LuckyBlog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将下载好的<code>LuckyBlog</code>全部复制到<code>MyBlog</code>目录下，如果复制过程中出现重复文件，点击替换。</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518202657.png"></p><p>最后使用 <code>npm i</code> 或者 <code>npm install</code> 安装依赖环境包即可。</p><blockquote><p>如果安装依赖环境出错，可以参考<a href="https://blog.csdn.net/Seven71111/article/details/103364738">这篇文章</a>。</p></blockquote><p>最后执行 <code>hexo clean</code> 和 <code>hexo s -g</code> 启动Hexo本地预览，即可看到效果。</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518204521.JPG"></p><p>到此为止LuckyBlog安装完成，接下来就是个性化设置了。</p><h3 id="0x03-LuckyBlog-个性化"><a href="#0x03-LuckyBlog-个性化" class="headerlink" title="0x03 LuckyBlog 个性化"></a>0x03 LuckyBlog 个性化</h3><blockquote><p>注意！注意！注意！在阅读以下博客个性化之前，最好希望大家有Hexo博客配置主题的基础。如果是完全小白，建议去网上搜索学习相关Hexo搭建博客的过程，另外去B站上也有很多视频教程。博客个性化是需要大家有耐心的，因为每个人的操作不同，在配置过程中可能会遇到一些不可预期的问题，希望大家可以克服这些困难，如有需要帮助，也可以私信博主帮助大家解决问题。</p></blockquote><h4 id="1-修改部署平台"><a href="#1-修改部署平台" class="headerlink" title="1. 修改部署平台"></a>1. 修改部署平台</h4><p>编辑根目录下的配置文件<code>MyBlog/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:- type: <span class="token function">git</span>  repo: git@github.com:LuckyZmj/LuckyZmj.github.io.git <span class="token comment"># 替换为你的部署平台地址</span>  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-修改网站信息"><a href="#2-修改网站信息" class="headerlink" title="2. 修改网站信息"></a>2. 修改网站信息</h4><p>编辑根目录下的配置文件<code>MyBlog/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Site</span>title: Luckeysubtitle: <span class="token string">'Luckeyの博客'</span>  description: <span class="token string">'本科 | 计算机科学与技术 | 网络安全'</span>keywords: <span class="token string">'luckyzmj 计算机 网络安全 渗透测试'</span>  <span class="token comment"># 博客网站关键词</span>author: Luckey   <span class="token comment"># 博主名称</span>language: zh-CNtimezone: <span class="token string">''</span><span class="token comment"># URL</span><span class="token comment">## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/'</span>url: http://www.luckyzmj.cn   <span class="token comment"># 更改为你的博客地址</span>root: /<span class="token comment"># permalink: :year/:month/:day/:title/</span>permalink: posts/:abbrlink.html  <span class="token comment"># p 是自定义的前缀</span>abbrlink:    alg: crc32   <span class="token comment">#算法： crc16(default) and crc32</span>    rep: hex     <span class="token comment">#进制： dec(default) and hex</span>permalink_defaults:pretty_urls:  trailing_index: <span class="token boolean">true</span> <span class="token comment"># Set to false to remove trailing 'index.html' from permalinks</span>  trailing_html: <span class="token boolean">true</span> <span class="token comment"># Set to false to remove trailing '.html' from permalinks</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-修改博客头像"><a href="#3-修改博客头像" class="headerlink" title="3. 修改博客头像"></a>3. 修改博客头像</h4><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Configure website favicon and LOGO</span><span class="token comment"># 将以下改为自己的头像链接即可</span>favicon: https://s1.ax1x.com/2020/05/17/YR20js.jpglogo: https://s1.ax1x.com/2020/05/17/YRWsYT.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-修改留言板简介"><a href="#4-修改留言板简介" class="headerlink" title="4. 修改留言板简介"></a>4. 修改留言板简介</h4><p>演示效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518204949.png"></p><p>编辑 <code>/MyBlog/contact/index.md</code>，修改你想要内容即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: contactdate: <span class="token number">2019</span>-10-25 00:00:00type: <span class="token string">"contact"</span>layout: <span class="token string">"contact"</span>---<span class="token comment">## 畅所欲言</span>---在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！<span class="token comment">## 友链</span>---Lucky_Meの友链信息博客名称: Lucky_Meの博客博客网址: http://luckyzmj.cn博客头像: https://s1.ax1x.com/2020/05/17/YRWsYT.png博客介绍: 知识面决定攻击面，知识链决定攻击深度！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-修改音乐列表"><a href="#5-修改音乐列表" class="headerlink" title="5. 修改音乐列表"></a>5. 修改音乐列表</h4><p>想要修改自己喜欢的音乐之前，需要先获取音乐列表的id。</p><p>以QQ音乐为例：先登录<a href="https://y.qq.com/">QQ音乐网页版</a>，点击打开自己喜欢的音乐列表，在网页的URL处包含了音乐列表的id，如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20200916213029.png"></p><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认是博主的QQ音乐的id，大家可以改为自己音乐喜欢列表的id</span><span class="token comment"># 更新完id，就可以同步加载自己喜欢的列表音乐了</span><span class="token comment"># Whether to display the musics.</span><span class="token comment"># 是否在首页显示音乐.</span>music:  enable: <span class="token boolean">true</span>  title: <span class="token comment">#非吸底模式有效</span>    enable: <span class="token boolean">true</span>    show: 听听音乐  autoHide: <span class="token boolean">true</span>    <span class="token comment"># hide automaticaly</span>  server: tencent   <span class="token comment">#require  music platform: netease, tencent, kugou, xiami, baidu</span>  type: playlist    <span class="token comment">#require song, playlist, album, search, artist</span>  id: <span class="token number">1776127550</span>     <span class="token comment">#require song id / playlist id / album id / search keyword</span>  fixed: <span class="token boolean">true</span>       <span class="token comment"># 开启吸底模式</span>  autoplay: <span class="token boolean">false</span>   <span class="token comment"># 是否自动播放</span>  theme: <span class="token string">'#42b983'</span>  loop: <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  order: <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  preload: <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  volume: <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  listFolded: <span class="token boolean">true</span>  <span class="token comment"># 列表默认折叠</span>  hideLrc: <span class="token boolean">true</span>     <span class="token comment"># 隐藏歌词</span><span class="token comment"># Whether to display the musics.</span><span class="token comment"># 单独的音乐页面.</span>musics:  enable: <span class="token boolean">true</span>  title:          <span class="token comment">#非吸底模式有效</span>    enable: <span class="token boolean">true</span>    show: 听听音乐  server: tencent   <span class="token comment">#require music platform: netease, tencent, kugou, xiami, baidu</span>  type: playlist    <span class="token comment">#require song, playlist, album, search, artist</span>  id: <span class="token number">1776127550</span>     <span class="token comment">#require song id / playlist id / album id / search keyword</span>  fixed: <span class="token boolean">false</span>      <span class="token comment"># 开启吸底模式</span>  autoplay: <span class="token boolean">true</span>   <span class="token comment"># 是否自动播放</span>  theme: <span class="token string">'#42b983'</span>  loop: <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  order: <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  preload: <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  volume: <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  listFolded: <span class="token boolean">false</span>  <span class="token comment"># 列表默认折叠</span>  listMaxHeight: <span class="token string">"525px"</span> <span class="token comment">#列表最大高度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-绑定-Valine-评论"><a href="#6-绑定-Valine-评论" class="headerlink" title="6. 绑定 Valine 评论"></a>6. 绑定 Valine 评论</h4><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span>valine:  enable: <span class="token boolean">true</span>  appId: Ucrxxxxxxxxxxxxxxxx-xxxxsz  <span class="token comment"># 自行注册valine获取</span>  appKey: zPsLxxxxxxxxxxxxxxerLmd    <span class="token comment"># 自行注册valine获取</span>  notify: <span class="token boolean">true</span>  verify: <span class="token boolean">true</span>  visitor: <span class="token boolean">true</span>  avatar: <span class="token string">'monsterid'</span> <span class="token comment"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  pageSize: <span class="token number">10</span>  placeholder: <span class="token string">'留下你的足迹..'</span> <span class="token comment"># Comment Box placeholder</span>  background: /medias/comment_bg.png  count: <span class="token boolean">true</span>  enableQQ: <span class="token number">16463223</span>  <span class="token comment"># 改为自己的QQ号</span>  recordIP: <span class="token boolean">true</span>  requiredFields:     - nick    - mail  guest_info:     - nick    - mail    - <span class="token function">link</span>  master:     - 46606772953bed0812789d6dc955614e  <span class="token comment"># md5加密后的博主邮箱</span>  metaPlaceholder:  <span class="token comment"># 输入框的背景文字</span>    nick: 昵称/QQ号<span class="token punctuation">(</span>必填<span class="token punctuation">)</span>    mail: 邮箱<span class="token punctuation">(</span>必填<span class="token punctuation">)</span>    link: 网址<span class="token punctuation">(</span>https://<span class="token punctuation">)</span>  lang: zh-CN  tagMeta: <span class="token comment"># The String Array of Words to show Flag.[Just Only xCss Style mode]</span>    - 博主    - 小伙伴    - 访客  friends: <span class="token comment"># The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode]</span>    - cb3e577ff029d6073400d5557effd41f       -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-绑定-DaoVoice-在线聊天"><a href="#7-绑定-DaoVoice-在线聊天" class="headerlink" title="7. 绑定 DaoVoice 在线聊天"></a>7. 绑定 DaoVoice 在线聊天</h4><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">daovoice:  enable: <span class="token boolean">true</span>  app_id: 4xxxxxxxe   <span class="token comment">#DaoVoice中的app_id</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="8-快捷导航页面个性化"><a href="#8-快捷导航页面个性化" class="headerlink" title="8. 快捷导航页面个性化"></a>8. 快捷导航页面个性化</h4><p>编辑文件<code>MyBlog/source/tools/index.html</code>，以下简单标记出几处，还有其他涉及到博客信息的内容都需要改为你自己的博客信息即可。</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20200916235833.png"></p><h4 id="9-添加友情链接"><a href="#9-添加友情链接" class="headerlink" title="9. 添加友情链接"></a>9. 添加友情链接</h4><p>编辑文件<code>MyBlog/suorce/_data/friends.json</code>，按如下格式添加友情</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">"avatar"</span><span class="token builtin class-name">:</span> <span class="token string">"https://s1.ax1x.com/2020/05/17/YRWsYT.png"</span>,        <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"Luckey"</span>,        <span class="token string">"introduction"</span><span class="token builtin class-name">:</span> <span class="token string">"越努力，越幸运"</span>,        <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"http://www.luckyzmj.cn"</span>,        <span class="token string">"title"</span><span class="token builtin class-name">:</span> <span class="token string">"访问主页"</span>    <span class="token punctuation">}</span>,<span class="token punctuation">{</span>      <span class="token string">"avatar"</span><span class="token builtin class-name">:</span> <span class="token string">"https://sunhwee.com/hwsun.jpg"</span>,      <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"洪卫の博客"</span>,      <span class="token string">"introduction"</span><span class="token builtin class-name">:</span> <span class="token string">"UESTC CVer"</span>,      <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"http://sunhwee.com"</span>,      <span class="token string">"title"</span><span class="token builtin class-name">:</span> <span class="token string">"访问主页"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="10-添加相册"><a href="#10-添加相册" class="headerlink" title="10. 添加相册"></a>10. 添加相册</h4><p>比如你的图片上传图床后，链接地址如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/璀璨星空/01.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/璀璨星空/02.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/动漫风景/01.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/动漫风景/02.jpg<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先提取出图片链接公共的部分，作为图床地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再提取图片地址中不同的部分，作为图片地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">璀璨星空/01.jpg璀璨星空/02.jpg动漫风景/01.jpg动漫风景/03.jpg<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>具体怎么分割根据你自己图床的链接格式而定，以上为我的github图床格式为例。</p></blockquote><p>将相册图床的地址改为你自己的图床地址，需要更改两处文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 例如我的图床地址为：</span>https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>themes/matery/layout/galleries.ejs</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20201008183019.png"></p><p>themes/matery/layout/gallerie.ejs</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20201008183219.png"></p><p>为每个相册添加链接地址，在根目录/source/List/galleries/下新建 相册名称 文件夹，并在该文件夹下新建 <code>index.md</code> </p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20201008183808.png"></p><p>最后，在根目录/source/_data/galleries.json中添加图片链接，格式如下,</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"璀璨星空"</span>,    <span class="token string">"cover"</span><span class="token builtin class-name">:</span> <span class="token string">"璀璨星空/01.jpg"</span>,    <span class="token string">"description"</span><span class="token builtin class-name">:</span> <span class="token string">"璀璨星空"</span>,    <span class="token string">"photos"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>      <span class="token string">"璀璨星空/01.jpg"</span>,      <span class="token string">"璀璨星空/02.jpg"</span>,      <span class="token string">"璀璨星空/03.jpg"</span>,      <span class="token string">"璀璨星空/04.jpg"</span>,      <span class="token string">"璀璨星空/05.jpg"</span>,      <span class="token string">"璀璨星空/06.jpg"</span>,      <span class="token string">"璀璨星空/07.jpg"</span>,      <span class="token string">"璀璨星空/08.jpg"</span>,      <span class="token string">"璀璨星空/09.jpg"</span>,      <span class="token string">"璀璨星空/10.jpg"</span>,      <span class="token string">"璀璨星空/11.jpg"</span>,      <span class="token string">"璀璨星空/12.jpg"</span>,      <span class="token string">"璀璨星空/13.jpg"</span>,      <span class="token string">"璀璨星空/14.jpg"</span>,      <span class="token string">"璀璨星空/15.jpg"</span>,      <span class="token string">"璀璨星空/16.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span>,  <span class="token punctuation">{</span>    <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"动漫风景"</span>,    <span class="token string">"cover"</span><span class="token builtin class-name">:</span> <span class="token string">"动漫风景/01.jpg"</span>,    <span class="token string">"description"</span><span class="token builtin class-name">:</span> <span class="token string">"动漫风景"</span>,    <span class="token string">"photos"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>      <span class="token string">"动漫风景/01.jpg"</span>,      <span class="token string">"动漫风景/02.jpg"</span>,      <span class="token string">"动漫风景/03.jpg"</span>,      <span class="token string">"动漫风景/04.jpg"</span>,      <span class="token string">"动漫风景/05.jpg"</span>,      <span class="token string">"动漫风景/06.jpg"</span>,      <span class="token string">"动漫风景/07.jpg"</span>,      <span class="token string">"动漫风景/08.jpg"</span>,      <span class="token string">"动漫风景/09.jpg"</span>,      <span class="token string">"动漫风景/10.jpg"</span>,      <span class="token string">"动漫风景/11.jpg"</span>,      <span class="token string">"动漫风景/12.jpg"</span>,      <span class="token string">"动漫风景/13.jpg"</span>,      <span class="token string">"动漫风景/14.jpg"</span>,      <span class="token string">"动漫风景/15.jpg"</span>,      <span class="token string">"动漫风景/16.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="11-站点统计功能"><a href="#11-站点统计功能" class="headerlink" title="11. 站点统计功能"></a>11. 站点统计功能</h4><p>站点统计的数据来源于<a href="https://tongji.baidu.com/web/welcome/login">百度统计</a>,当你的网站被百度收录后就会在百度统计中出现数据，具体效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518211242.png"></p><p>由于博客的统计页面数据不能直接从百度站点中调用，因此需要自行从百度站点中将相应数据填入博客站点统计页面的源代码文件中，个人建议每隔一个月手动更新一次数据。</p><p>打开<code>MyBlog\themes\matery\layout\census.ejs</code>文件，将百度统计中的数据填入源代码中，修改代码如下：</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518210629.png"></p><h4 id="11-仿Windows个性化"><a href="#11-仿Windows个性化" class="headerlink" title="11. 仿Windows个性化"></a>11. 仿Windows个性化</h4><p>仿Windows页面是采用<a href="https://ylui.yuri2.cn/">YLUI</a>实现的，YLUI提供了社区版本供大家学习使用，具体效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518211817.png"></p><p>大家可以查看YLUI官方的<a href="https://github.com/yuri2peter/ylui/tree/master/documents">开发文档</a>进行开发，有不懂的可以加官方的QQ群：<code>191372634</code> 进行讨论。</p><h4 id="12-博客动漫风格背景图"><a href="#12-博客动漫风格背景图" class="headerlink" title="12. 博客动漫风格背景图"></a>12. 博客动漫风格背景图</h4><p>因为在上一个LuckyBlog版本发布的网站风格是偏向动漫风格的，如果大家喜欢动漫风格，只需要替换以下配置即可。</p><p><strong>博客每日轮播图：</strong> 以下链接图片全部下载保存到<code>MyBlog\themes\matery\source\medias\banner</code>中，以0~7.jpg的文件名格式命名即可。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/0.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/1.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/2.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/3.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/4.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/5.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/6.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/7.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>无文章特色背景图：</strong> 打开主题配置文件<code>MyBlog\themes\matery\_config.yml</code>，修改替换如下代码即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># The post featured images that needs to be displayed when there is no image.</span><span class="token comment"># 无文章特色图片时需要显示的文章特色图片.</span>featureImages: - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/01.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/02.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/04.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/06.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/07.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/10.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/11.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/12.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/09.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/14.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/15.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/16.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/06.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/02.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/03.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/04.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/07.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/08.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/11.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/10.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/09.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/12.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/13.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/14.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/16.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/15.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/11.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/09.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/03.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/08.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/03.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/13.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/01.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/05.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/14.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/01.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="0x04-更多内容优化"><a href="#0x04-更多内容优化" class="headerlink" title="0x04 更多内容优化"></a>0x04 更多内容优化</h3><p>以上简单介绍了 <code>LuckyBlog</code> 中一些要修改的个性化地方，其他更详细的优化参考其他关于<code>Matery</code>的文章。以下几篇文章都是基于<code>hexo-theme-matery</code>主题优化的教程，大家如果遇到问题，可以参考其中的方法。</p><ul><li><a href="http://luckyzmj.cn/posts/e3e08109.html">个人博客搭建</a></li><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery作者教程</a></li><li><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github搭建博客(超级详细版，精细入微)</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/106278206">hexo（matery）背景、滚动条优化+增加点击跳评论</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Luckey博客篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> hexo-blog-lucky </tag>
            
            <tag> 博客搭建教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo之渲染绕过-转载</title>
      <link href="posts/17fd92ae.html"/>
      <url>posts/17fd92ae.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来自<a href="http://www.luckyzmj.cn/">Lucky的个人网站</a></p><h3 id="0x001-Hexo-渲染"><a href="#0x001-Hexo-渲染" class="headerlink" title="0x001 Hexo 渲染"></a>0x001 Hexo 渲染</h3><p>  在Hexo部署时会默认渲染source下的所有html页面，但有时候想在Hexo博客上单独自定义html页面或README.md时，却不希望被Hexo渲染。因此对某个文件或者目录进行排除渲染是非常必要的。</p><h3 id="0x002-方法一：font-matter"><a href="#0x002-方法一：font-matter" class="headerlink" title="0x002 方法一：font matter"></a>0x002 方法一：font matter</h3><p><code>Hexo</code>新建网站页面，然后将你的代码直接写入 <code>index.md</code> 中</p><p>在 <code>Front matter</code> 中添加 <code>layout: false</code>，此方法适用于单一的纯<code>HTML</code><br><code>CSS</code> 页面。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: toolsdate: <span class="token number">2020</span>-04-28 00:00:00type: <span class="token string">"tools"</span>layout: <span class="token boolean">false</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="0x003-方法二：skip-render"><a href="#0x003-方法二：skip-render" class="headerlink" title="0x003 方法二：skip render"></a>0x003 方法二：skip render</h3><p>在博客根目录下的 <code>_config.yml</code>，找到 <code>skip_render</code>，大概在32行左右，写入你想要的跳过渲染的路径，注意缩进和空格。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 指定目录跳过hexo渲染</span>skip_render:  - <span class="token string">'tools/*'</span>  - <span class="token string">'tools/**'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注释：<code>tools/*</code> 表示在目录 <code>source/fireworks</code> 下的文件全部跳过渲染，<code>tools/**</code> 表示在博客根目录 <code>source/tools/</code> 文件夹下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中）。</p></blockquote><h3 id="0x004-案例：webstack-导航"><a href="#0x004-案例：webstack-导航" class="headerlink" title="0x004 案例：webstack 导航"></a>0x004 案例：webstack 导航</h3><p><code>webstack</code>是一个纯静态的网址导航网站，内容均由<code>viggo</code>收集并整理。项目基于<code>bootstrap</code>前端框架开发。</p><p><img src="https://camo.githubusercontent.com/41111c4c1d9922982f380566e6a2f8415204c52c/687474703a2f2f7777772e776562737461636b2e63632f6173736574732f696d616765732f707265766965772e676966" alt="image"></p><ul><li>Github：<a href="https://github.com/WebStackPage/WebStackPage.github.io">https://github.com/WebStackPage/WebStackPage.github.io</a></li></ul><p>在博客根目录 <code>source/</code>下新建<code>tools</code>，然后新建<code>index.html</code>,将<code>webstack</code>网页源码全选复制粘贴到里面。</p><ul><li>本站的webstack源码：<a href="view-source:http://luckyzmj.cn/tools/">view-source:http://luckyzmj.cn/tools/</a></li></ul><blockquote><p>注意：将源码里的部分信息以及跳转链接按照你真实个人博客的环境进行修改。</p></blockquote><p>然后打开博客根目录下配置文件<code>_config.yml</code>，找到<code>skip_render</code>，做如下修改：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">skip_render:  - <span class="token string">'tools/*'</span>  - <span class="token string">'tools/**'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后执行<code>hexo clean</code>和<code>hexo s -g </code>本地预览，检查无误后<code>hexo g -d</code>部署到服务器上即可。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://xiabor.com/2020/04/21/hexo3/#%E5%A6%82%E4%BD%95%E8%B7%B3%E8%BF%87hexo%E7%9A%84%E6%B8%B2%E6%9F%93">https://xiabor.com/2020/04/21/hexo3/#%E5%A6%82%E4%BD%95%E8%B7%B3%E8%BF%87hexo%E7%9A%84%E6%B8%B2%E6%9F%93</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Luckey博客篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 渲染绕过 </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云服务器部署Hexo博客-转载</title>
      <link href="posts/19d2a4e6.html"/>
      <url>posts/19d2a4e6.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来自<a href="http://www.luckyzmj.cn/">Lucky的个人网站</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr><p>  相信大部分人使用Hexo搭建个人博客都会部署到一些免费的代码托管平台上，但这些免费的平台总是差强人意，比如国外的GitHub平台虽然完全免费，但在国内访问加载速度非常慢，又或者是国内的码云平台免费版有许多功能被阉割掉了，比如不能自定义域名，不能每次自动刷新提交的代码，需要到码云平台上手动刷新，如此一来非常繁琐。</p><p>  为了有效解决上诉的一些问题，有条件的话，不妨在自己的云服务器上搭建Hexo博客。</p><h2 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h2><hr><p>这是Hexo博客部署到GitHub上的网站测速效果</p><p><img src="https://s1.ax1x.com/2020/03/12/8mhkv9.png" alt="演示demo1"></p><p>这是Hexo博客部署到阿里云服务器后的网站测速效果</p><p><img src="https://s1.ax1x.com/2020/03/12/8mWYQA.png" alt="演示demo2"></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><hr><ul><li>本地环境：Windows 10 </li><li>云服务器环境：阿里云ECS（CentOS7.x）</li></ul><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><hr><h3 id="本地环境搭建"><a href="#本地环境搭建" class="headerlink" title="本地环境搭建"></a>本地环境搭建</h3><p><strong>1.安装Git</strong></p><p>到git官网上下载.exe文件,Download git,安装选项还是全部默认，最后一步添加路径时选择<code>Use Git from the Windows Command Prompt</code>。</p><ul><li>Git<a href="https://git-scm.com/download">下载地址</a></li><li>Git<a href="https://www.liaoxuefeng.com/wiki/896043488029600">教程</a></li></ul><p><strong>2.安装Nodejs</strong></p><p>到<a href="http://nodejs.cn/download/">Node.js官网</a>下载<code>.exe</code>文件，安装选项全部默认。安装好之后，按<code>Win+R</code>打开cmd命令提示符，输入<code>node -v</code>和<code>npm -v</code>，若出现版本号，则说明安装成功。</p><p>使用npm阿里的国内镜像进行加速下载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>4.安装Hexo</strong></p><p>先创建一个文件夹<code>MyBlog</code>，用来存放自己的博客文件，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键<code>git bash here</code>打开）。</p><p>定位到该目录下，输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code>。可能会有几个报错，不用理会。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完后输入<code>hexo -v</code>,若出现版本号则，说明安装成功。</p><p>接下来初始化一下<code>hexo</code>,即初始化我们的博客，输入<code>hexo init</code>初始化文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init MyBlog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建完成后，指定文件夹<code>MyBlog</code>目录下有：</p><ul><li><code>node_modules</code>: 依赖包</li><li><code>public</code>：存放生成的页面</li><li><code>scaffolds</code>：生成文章的一些模板</li><li><code>source</code>：用来存放你的文章</li><li><code>themes</code>：主题**</li><li><code>_config.yml</code>: 博客的配置文件**</li></ul><p>输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器预览</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s1.ax1x.com/2020/03/12/8VdlGD.png" alt="Hexo"></p><h3 id="生成ssh公钥"><a href="#生成ssh公钥" class="headerlink" title="生成ssh公钥"></a>生成ssh公钥</h3><p>在本地桌面点击右键<code>Git Bash Here</code>打开Git终端，执行如下命令`,一路回车</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。在<code>git bash</code>中输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输出的内容就是公钥信息了</p><h3 id="阿里云服务器环境搭建"><a href="#阿里云服务器环境搭建" class="headerlink" title="阿里云服务器环境搭建"></a>阿里云服务器环境搭建</h3><p>安装<code>Git</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建<code>Git</code>账户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adduser <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加账户权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">740</span> /etc/sudoers<span class="token function">vim</span> /etc/sudoers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>找到</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## Allow root to run any commands anywhere</span>root    <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>     ALL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>添加以下内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span>   <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>     ALL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>保存退出并改回权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">400</span> /etc/sudoers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置<code>git</code>账户密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>切换至<code>git</code>用户，创建 <code>~/.ssh</code> 文件夹和 <code>~/.ssh/authorized_keys</code> 文件，并赋予相应的权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> <span class="token function">git</span><span class="token function">mkdir</span> ~/.ssh<span class="token function">vim</span> ~/.ssh/authorized_keys<span class="token comment"># 然后将win10中生成的id_rsa.pub文件中的公钥复制到authorized_keys</span><span class="token function">chmod</span> <span class="token number">600</span> /home/git/.ssh/authorized_keys<span class="token function">chmod</span> <span class="token number">700</span> /home/git/.ssh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在本地<code>Git</code>终端中测试是否能免密登录<code>git</code>，其中<code>SERVER</code>为填写自己的云主机<code>IP</code>，执行输入<code>yes</code>后不用密码就说明好了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -v git@SERVER<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#repo作为为Git仓库目录</span><span class="token function">mkdir</span> /var/repo<span class="token function">chown</span> -R git:git /var/repo<span class="token function">chmod</span> -R <span class="token number">755</span> /var/repo<span class="token comment">#hexo作为网站根目录</span><span class="token function">mkdir</span> /var/www/hexo<span class="token function">chown</span> -R git:git /var/www/hexo<span class="token function">chmod</span> -R <span class="token number">755</span> /var/www/hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后创建一个裸的 <code>Git</code> 仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> var/repo<span class="token function">git</span> init --bare hexoBlog.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建一个新的 <code>Git</code> 钩子，用于自动部署 在 <code>/var/repo/hexoBlog.git</code> 下，有一个自动生成的 <code>hooks</code> 文件夹。我们需要在里边新建一个新的钩子文件 <code>post-receive</code>。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /var/repo/hexoBlog.git/hooks/post-receive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按 <code>i</code> 键进入文件的编辑模式，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 <code>Git</code> 的工作树（源代码）和 <code>Git</code> 目录（配置文件等）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">git</span> --work-tree<span class="token operator">=</span>/var/www/hexo --git-dir<span class="token operator">=</span>/var/repo/hexoBlog.git checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后，按 <code>Esc</code> 键退出编辑模式，输入”<code>:wq</code>” 保存退出。</p><p>修改文件权限，使得其可执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chown</span> -R git:git /var/repo/hexoBlog.git/hooks/post-receive<span class="token function">chmod</span> +x /var/repo/hexoBlog.git/hooks/post-receive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>到此为止 <code>Git</code> 仓库就搭建完成了。</p><h3 id="阿里云服务器配置Nginx"><a href="#阿里云服务器配置Nginx" class="headerlink" title="阿里云服务器配置Nginx"></a>阿里云服务器配置Nginx</h3><p>用宝塔面板来一键部署Nginx <code>Linux</code>面板6.0安装命令(暂时仅兼容<code>Centos7.x</code>，其它系统版本请安装5.9稳定版)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> -y <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> -O install.sh http://download.bt.cn/install/install_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>Linux</code>面板6.0升级专业版</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> http://download.bt.cn/install/update6.sh<span class="token operator">|</span><span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后会显示面板后台地址·账号·密码。打开面板后台地址登陆面板，选择<code>Nginx</code>的部署方案，静静等待部署。</p><p>部署完成，点击网站-添加站点-输入域名(没有域名的输入自己的<code>IP</code>地址)-底部的<code>PHP</code>版本选择”纯静态”-提交。 </p><p>网站创建完成后点击设置-配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server<span class="token punctuation">{</span>    listen <span class="token number">80</span><span class="token punctuation">;</span>  <span class="token comment"># server_name 填写自己的域名</span>    server_name luckyzmj.cn blog.luckyzmj.cn<span class="token punctuation">;</span>    index index.php index.html index.htm default.php default.htm default.html<span class="token punctuation">;</span>  <span class="token comment"># 这里root填写自己的网站根目录，修改为/var/www/hexo</span>    root /var/www/hexo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>-保存</p><p>点击设置-网站目录，修改为<code>/var/www/hexo</code> ，保存</p><p>重启宝塔面板服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> bt restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="本地Hexo部署到阿里云服务器"><a href="#本地Hexo部署到阿里云服务器" class="headerlink" title="本地Hexo部署到阿里云服务器"></a>本地Hexo部署到阿里云服务器</h3><p>进入到本地<code>Hexo</code>博客的文件夹<code>MyBlog</code>,右键点击<code>Git Bash Here</code>，输入命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#定义邮箱(更换为你的邮箱地址就行)</span><span class="token function">git</span> config --global user.email <span class="token string">"you@example.com"</span><span class="token comment">#定义名称(更换自定义一个名称就行)</span><span class="token function">git</span> config --global user.name <span class="token string">"Your Name"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>配置<code>_config.yml</code>,完成自动化部署 </p><p>打开本地<code>Hexo</code>博客的文件夹<code>MyBlog</code>文件夹下的<code>_config.yml</code>, 找到<code>deploy</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  <span class="token comment">#server改为你的服务IP地址或解析后的域名</span>  <span class="token comment">#例如我改为repo: git@luckyzmj.cn:/var/repo/blog.git</span>  repo: git@server:/var/repo/blog.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存后，即可测试部署</p><p>再进入到本地<code>Hexo</code>博客的文件夹<code>MyBlog</code>,右键点击<code>Git Bash Here</code>，输入命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>不报错说明完成，打开浏览器输入你的域名或<code>ip</code>地址就可以看到你部署的<code>Hexo</code>博客了。 </p><p>到此为止，我们已经成功部完成，并且访问自己的服务器端比访问Github快多了。</p><blockquote><h3 id="小贴士"><a href="#小贴士" class="headerlink" title="小贴士"></a>小贴士</h3></blockquote><p>在部署过程中，执行 hexo d发现部署老是出错，什么权限不允许之类的，这里我们需要检查我们在上述的<code>git</code>操作部署是否使用了<code>git</code>用户操作，若是没有，需要给相应的目录更改用户组 使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chown</span> -R git:git /var/repo/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令递归的将<code>repo</code>目录及其子目录用户组设置为<code>git</code>。 同时使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chown</span> -R git:git /var/www/hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样即可解决此类问题。</p><p>还有一个问题就是绑定域名后不能访问。原因是在国内任何域名只要绑定到国内的服务器主机上都必须去工信部和公安部备案完后才能正常使用。如果是港澳台的服务器或者是国外的服务器则可以不需要备案。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://blog.csdn.net/weixin_33907511/article/details/91398208?utm_source=distribute.pc_relevant.none-task">https://blog.csdn.net/weixin_33907511/article/details/91398208?utm_source=distribute.pc_relevant.none-task</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Luckey博客篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 转载 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建-转载</title>
      <link href="posts/e3e08109.html"/>
      <url>posts/e3e08109.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来自<a href="http://www.luckyzmj.cn/">Lucky的个人网站</a></p><h2 id="0x001-效果演示"><a href="#0x001-效果演示" class="headerlink" title="0x001 效果演示"></a>0x001 效果演示</h2><hr><p><img src="https://s2.ax1x.com/2020/03/11/8E3bBF.png" alt="演示Demo"></p><h2 id="0x002-简单介绍"><a href="#0x002-简单介绍" class="headerlink" title="0x002 简单介绍"></a>0x002 简单介绍</h2><hr><p>  前前后后大概花了一周多的时间，目前个人博客已经完善的差不多了，现在写个文章做个阶段总结，后续如果有更新的地方，会及时补充。本博客基于Hexo框架，采用<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery</a>主题，在这里非常感谢作者<code>洪卫</code>的<a href="https://github.com/shw2018/hexo-blog-fly.git">hexo-blog-fly</a>博客开源，极大简化了构建博客的工作量和复杂度。在此开源博客的基础上做了改进，修复了一些bug，顺利搭建完成了我的个人博客。大家对此主题有兴趣的可以<a href="https://github.com/shw2018/hexo-blog-fly">下载源代码</a>，搭建属于自己的个性化博客。</p><ul><li>个人博客 演示：<a href="http://luckyzmj.cn/">http://luckyzmj.cn</a></li></ul><hr><h2 id="0x003-Hexo-初级搭建"><a href="#0x003-Hexo-初级搭建" class="headerlink" title="0x003 Hexo 初级搭建"></a>0x003 Hexo 初级搭建</h2><hr><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h3><p><code>Git</code>是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。<code>Git</code>的作用是将本地的网页文件传到<code>github</code>上。</p><ul><li>Git<a href="https://git-scm.com/download">下载地址</a></li><li>Git<a href="https://www.liaoxuefeng.com/wiki/896043488029600">教程</a></li></ul><p><strong>windows：</strong> 到git官网上下载.exe文件,Download git,安装选项还是全部默认，最后一步添加路径时选择<code>Use Git from the Windows Command Prompt</code>。</p><h3 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2. 安装node.js"></a>2. 安装node.js</h3><p><code>Hexo</code>是基于<code>node.js</code>编写的，所以需要安装一下<code>node.js</code>和里面的<code>npm</code>工具。</p><p><strong>windows：</strong> 到<a href="http://nodejs.cn/download/">Node.js官网</a>下载<code>.exe</code>文件，安装选项全部默认。安装好之后，按<code>Win+R</code>打开cmd命令提示符，输入<code>node -v</code>和<code>npm -v</code>，若出现版本号，则说明安装成功。</p><h3 id="3-添加npm国内源"><a href="#3-添加npm国内源" class="headerlink" title="3. 添加npm国内源"></a>3. 添加npm国内源</h3><p>使用阿里的国内镜像进行加速下载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h3><p>前面<code>git</code>和<code>nodejs</code>安装好后，就可以安装<code>hexo</code>了，你可以先创建一个文件夹<code>MyBlog</code>，用来存放自己的博客文件，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键<code>git bash</code>打开）。</p><p>比如我的博客文件都存放在<code>E:\MyBlog</code>目录下。</p><p>在该目录下右键点击<code>Git Bash Here</code>，打开<code>git</code>的控制台窗口，以后我们所有的操作都在<code>git</code>控制台进行，就不用<code>Windows</code>自带的<code>cmd</code>了。</p><p>定位到该目录下，输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code>。可能会有几个报错，不用理会。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p>到此为止<code>hexo</code>就安装完了。</p><p>接下来初始化一下<code>hexo</code>,即初始化我们的网站，输入<code>hexo init</code>初始化文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init MyBlog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建完成后，指定文件夹<code>MyBlog</code>目录下有：</p><ul><li><code>node_modules</code>: 依赖包</li><li><code>public</code>：存放生成的页面</li><li><code>scaffolds</code>：生成文章的一些模板</li><li><code>source</code>：用来存放你的文章</li><li><code>themes</code>：主题**</li><li><code>_config.yml</code>: 博客的配置文件**</li></ul><p>到此为止，本地的网站配置完成了。</p><p>输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s1.ax1x.com/2020/03/12/8VdlGD.png"></p><h3 id="5-注册Github账号创建个人仓库"><a href="#5-注册Github账号创建个人仓库" class="headerlink" title="5. 注册Github账号创建个人仓库"></a>5. 注册Github账号创建个人仓库</h3><p>接下来就去注册一个<code>github</code>账号，用来存放我们的网站。</p><p>打开<a href="https://github.com/">https://github.com/</a>，新建一个项目仓库<code>New repository</code>，如下所示：</p><p><img src="https://s1.ax1x.com/2020/03/12/8VwrtK.png"></p><p>然后如下图所示，输入自己的项目名字，后面一定要加<code>.github.io</code>后缀，README初始化也要勾上</p><p><img src="https://s1.ax1x.com/2020/03/12/8VdoQJ.png"></p><blockquote><p>要创建一个和你用户名相同的仓库，后面加<code>.github.io</code>，只有这样，将来要部署到<code>GitHub page</code>的时候，才会被识别，也就是<code>http://xxxx.github.io</code>，其中xxx就是你注册<code>GitHub</code>的用户名。例如我的：<code>http://LuckyZmj.github.io</code></p></blockquote><h3 id="6-生成SSH添加到GitHub"><a href="#6-生成SSH添加到GitHub" class="headerlink" title="6. 生成SSH添加到GitHub"></a>6. 生成SSH添加到GitHub</h3><p>生成<code>SSH</code>添加到<code>GitHub</code>，连接<code>Github</code>与本地。<br>右键打开<code>git bash here</code>，然后输入下面命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"注册GitHub用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"注册GitHub的邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>用以下两条，检查一下你有没有输对</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config user.name<span class="token function">git</span> config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后创建<code>SSH</code>,一路回车</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"注册GitHub的邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。在<code>git bash</code>中输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将输出的内容复制到框中，点击确定保存。</p><p>打开<code>github</code>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取一个都可以，把你的<code>id_rsa.pub</code>里面的信息复制进去。如图：</p><p><img src="https://s1.ax1x.com/2020/03/12/8Vwnyj.png"></p><p>在<code>git bash</code>输入<code>ssh -T git@github.com</code>，如果如下图所示，出现你的用户名，那就成功了。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7-将hexo部署到GitHub"><a href="#7-将hexo部署到GitHub" class="headerlink" title="7. 将hexo部署到GitHub"></a>7. 将hexo部署到GitHub</h3><p>将<code>hexo</code>生成的文章部署到<code>GitHub</code>上，打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。<br>找到如下配置进行修改：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository: https://github.com/LuckyZmj/LuckyZmj.github.io  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>repository</code>修改为你自己的<code>github</code>项目地址即可，就是部署时，告诉工具，将生成网页通过<code>git</code>方式上传到你对应的链接仓库中。</p><p>这个时候需要先安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到<code>GitHub</code>。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后就可以部署提交到<code>github</code>，过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中 <code>hexo clean</code>清除了你之前生成的东西。 <code>hexo generate</code>，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p></blockquote><h3 id="8-写文章和发布文章"><a href="#8-写文章和发布文章" class="headerlink" title="8. 写文章和发布文章"></a>8. 写文章和发布文章</h3><p>首先在博客根目录下右键打开<code>git bash here</code>，安装一个扩展<code>npm i hexo-deployer-git</code>。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后输入<code>hexo new post "article title"</code>，新建一篇文章。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new post <span class="token string">"article title"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后打开<code>E:\MyBlog\source\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件。</p><p>另外推荐直接使用<code>有道云</code>编写<code>markdown</code>文章，不仅可以实时预览，还可以快捷的生成<code>markdown</code>语法格式，具体效果如下图所示。</p><p><img src="https://s1.ax1x.com/2020/03/12/8VwItf.png" alt="有道云"></p><p>编写完<code>markdown</code>文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到<code>github</code>上。这时打开你的<code>github.io</code>主页就能看到发布的文章了。</p><p>到此为止，<code>Hexo</code>初级搭建就已经完成了。</p><h2 id="0x004-Hexo-优化定制"><a href="#0x004-Hexo-优化定制" class="headerlink" title="0x004 Hexo 优化定制"></a>0x004 Hexo 优化定制</h2><hr><h3 id="1-Hexo相关目录文件"><a href="#1-Hexo相关目录文件" class="headerlink" title="1. Hexo相关目录文件"></a>1. Hexo相关目录文件</h3><h4 id="1-1-博客目录构成介绍"><a href="#1-1-博客目录构成介绍" class="headerlink" title="1.1 博客目录构成介绍"></a>1.1 博客目录构成介绍</h4><p><code>node_modules</code>是<code>node.js</code>各种库的目录，<code>public</code>是生成的网页文件目录，<code>scaffolds</code>里面就三个文件，存储着新文章和新页面的初始设置，<code>source</code>是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，<code>themes</code>存放着主题文件，一般也用不到。</p><p>我们平时写文章只需要关注<code>source/_posts</code>这个文件夹就行了。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">- node_modules- public- scaffolds- <span class="token builtin class-name">source</span>    - _data    - _posts    - about    - archives    - categories    - friends    - tags- themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-hexo基本配置"><a href="#1-2-hexo基本配置" class="headerlink" title="1.2 hexo基本配置"></a>1.2 hexo基本配置</h4><p>在文件根目录下的<code>_config.yml</code>，就是整<code>个hexo</code>框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。</p><h5 id="1-2-1-网站"><a href="#1-2-1-网站" class="headerlink" title="1.2.1 网站"></a>1.2.1 网站</h5><p>参数描述<code>title</code>网站标题<code>subtitle</code>网站副标题<code>description</code>网站描述<code>author</code>您的名字<code>language</code>网站使用的语言<code>timezone</code>网站时区。<code>Hexo</code> 默认使用您电脑的时区。时区列表。比如说：<code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。</p><p>其中，<code>description</code>主要用于<code>SEO</code>，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><h5 id="1-2-2-网址"><a href="#1-2-2-网址" class="headerlink" title="1.2.2 网址"></a>1.2.2 网址</h5><p>参数描述<code>url</code>网址<code>root</code>网站根目录 <code>permalink</code>文章的<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a>格式<code>permalink_defaults</code>永久链接中各部分的默认值</p><p>在这里，你需要把<code>url</code>改成你的网站域名。</p><p><code>permalink</code>，也就是你生成某个文章时的那个链接格式。</p><p>比如我新建一个文章叫<code>temp.md</code>，那么这个时候他自动生成的地址就是<code>http://yoursite.com/2018/09/05/temp</code>。</p><p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">参数结果:year/:month/:day/:title       /2019/08/10/hello-world :year-:month-:day-:title.html  <span class="token number">2019</span>-08-10-hello-world.html :category/:titlefoo            /bar/hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-定制主题"><a href="#2-定制主题" class="headerlink" title="2. 定制主题"></a>2. 定制主题</h3><p>这里推荐作者<code>洪卫</code>的<a href="https://github.com/shw2018/hexo-blog-fly.git">hexo-blog-fly</a>博客主题，该主题是基于<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>优化的，需要把博客相关信息换成您自己的就可以部署了，极大简化了构建博客的工作量和复杂度。</p><h4 id="2-1-简单使用方法"><a href="#2-1-简单使用方法" class="headerlink" title="2.1 简单使用方法"></a>2.1 简单使用方法</h4><ol><li>安装<code>Git</code>, 安装<code>nodeJS</code>，安装<code>Hexo</code></li><li>你可以直接<code>fork</code>一份源码到你的仓库，<code>clone</code>到本地博客文件夹内</li><li>在本地博客仓库运行<code>npm i</code>命令安装依赖包</li><li>直接修改配置信息，改成自己的信息</li><li>运行命令<code>hexo clean</code>（清除生成文件），<code>hexo g</code>（生成网页）， <code>hexo s</code>（本地预览），<code>hexo d</code>（部署）</li></ol><h4 id="2-2-原主题特性"><a href="#2-2-原主题特性" class="headerlink" title="2.2 原主题特性:"></a>2.2 原主题特性:</h4><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li></ul><h4 id="2-3-新增加特性"><a href="#2-3-新增加特性" class="headerlink" title="2.3 新增加特性:"></a>2.3 新增加特性:</h4><ul><li>修改了原主题的一些很多bug</li><li>加入图片懒加载功能，在根目录配置文件开启和关闭</li><li>增加留言板功能</li><li>在关于板块,加入简历功能页</li><li>增加视听[视觉听觉影音]板块 </li><li>支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情。</li><li>增加网站运行时间显示 </li><li>增加动漫模型 </li><li>整体替换Banner图片和文章特色图片</li><li>增加分类相册功能</li><li>修改了一些控件的参数</li><li>修改部分样式,比如: 文章卡片,固定高度,使其不至于因为文章摘要的长短不同导致卡片大小不一使页面布局很不美观,类似的还有友链卡片,优化了页面内容布局,视觉更整齐美观</li><li>解决首页文章列表卡片上方 border-radius圆角失效的bug</li><li>添加页面樱花飘落动效</li><li>添加鼠标点击烟花爆炸动效</li><li>加入天气接口控件</li><li>加入鼠标点击文字特效</li><li>添加页面雪花飘落动效</li><li>添加在线聊天插件</li><li>调整线聊天插件参数，使之能够随着鼠标滑动位置自适应调整</li><li>持续更新…</li></ul><hr><h4 id="2-4-切换主题"><a href="#2-4-切换主题" class="headerlink" title="2.4 切换主题"></a>2.4 切换主题</h4><p>如果想自己动手对<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>优化的话，可以修改Hexo根目录下的<code> _config.yml</code>的 <code>theme</code> 的值</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">theme: hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>_config.yml</code> 文件的其它修改建议:</p><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h4 id="2-5-新建分类-categories-页"><a href="#2-5-新建分类-categories-页" class="headerlink" title="2.5 新建分类 categories 页"></a>2.5 新建分类 categories 页</h4><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: categoriesdate: <span class="token number">2018</span>-09-30 <span class="token number">17</span>:25:30type: <span class="token string">"categories"</span>layout: <span class="token string">"categories"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-6-新建标签-tags-页"><a href="#2-6-新建标签-tags-页" class="headerlink" title="2.6 新建标签 tags 页"></a>2.6 新建标签 tags 页</h4><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: tagsdate: <span class="token number">2018</span>-09-30 <span class="token number">18</span>:23:38type: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-7-新建关于我-about-页"><a href="#2-7-新建关于我-about-页" class="headerlink" title="2.7 新建关于我 about 页"></a>2.7 新建关于我 about 页</h4><p><code>about</code> 页是用来展示关于我和我的博客信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: aboutdate: <span class="token number">2018</span>-09-30 <span class="token number">17</span>:25:30type: <span class="token string">"about"</span>layout: <span class="token string">"about"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-8-新建留言板-contact-页（可选的）"><a href="#2-8-新建留言板-contact-页（可选的）" class="headerlink" title="2.8 新建留言板 contact 页（可选的）"></a>2.8 新建留言板 contact 页（可选的）</h4><p><code>contact</code> 页是用来展示留言板信息的页面，前提是已经开启了第三方评论系统才能显示。如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: contactdate: <span class="token number">2018</span>-09-30 <span class="token number">17</span>:25:30type: <span class="token string">"contact"</span>layout: <span class="token string">"contact"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-9-新建友情链接-friends-页（可选的）"><a href="#2-9-新建友情链接-friends-页（可选的）" class="headerlink" title="2.9 新建友情链接 friends 页（可选的）"></a>2.9 新建友情链接 friends 页（可选的）</h4><p><code>friends</code> 页是用来展示友情链接信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: friendsdate: <span class="token number">2018</span>-12-12 <span class="token number">21</span>:25:30type: <span class="token string">"friends"</span>layout: <span class="token string">"friends"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token string">"avatar"</span><span class="token builtin class-name">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span>,    <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"码酱"</span>,    <span class="token string">"introduction"</span><span class="token builtin class-name">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span>,    <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"http://luokangyuan.com/"</span>,    <span class="token string">"title"</span><span class="token builtin class-name">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>    <span class="token string">"avatar"</span><span class="token builtin class-name">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span>,    <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"闪烁之狐"</span>,    <span class="token string">"introduction"</span><span class="token builtin class-name">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span>,    <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"https://blinkfox.github.io/"</span>,    <span class="token string">"title"</span><span class="token builtin class-name">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>    <span class="token string">"avatar"</span><span class="token builtin class-name">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span>,    <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"ja_rome"</span>,    <span class="token string">"introduction"</span><span class="token builtin class-name">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span>,    <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span>,    <span class="token string">"title"</span><span class="token builtin class-name">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-10-一级菜单导航配置"><a href="#2-10-一级菜单导航配置" class="headerlink" title="2.10 一级菜单导航配置"></a>2.10 一级菜单导航配置</h4><p>配置基本菜单导航的名称、路径<code>url</code>和图标<code>icon</code></p><ul><li>菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或主页) </li><li>图标<code>icon</code> 可以在<code>Font Awesome</code> 中查找</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Friends:    url: /friends    icon: fas fa-address-book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-11-二级菜单配置方法"><a href="#2-11-二级菜单配置方法" class="headerlink" title="2.11 二级菜单配置方法"></a>2.11 二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ul><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)</li><li>在<code>children</code>下创建二级菜单的 名称<code>name</code>,路径<code>url</code>和图标<code>icon</code>.</li><li>注意每个二级菜单模块前要加 -.</li><li>注意缩进格式</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle-o  Friends:    url: /friends    icon: fas fa-address-book  Medias:    icon: fas fa-list    children:      - name: Musics        url: /musics        icon: fas fa-music      - name: Movies        url: /movies        icon: fas fa-film      - name: Books        url: /books        icon: fas fa-book      - name: Galleries        url: /galleries        icon: fas fa-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean</code> &amp;&amp; <code>hexo g</code> 重新生成博客文件。</p><h4 id="2-12-代码高亮"><a href="#2-12-代码高亮" class="headerlink" title="2.12 代码高亮"></a>2.12 代码高亮</h4><p>由于 <code>Hexo</code> 自带的代码高亮主题显示不好看，所以主题中使用到了 <code>hexo-prism-plugin</code> 的 <code>Hexo</code> 插件来做代码高亮，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，修改 <code>Hexo</code> 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>prism_plugin:  mode: <span class="token string">'preprocess'</span>    <span class="token comment"># realtime/preprocess</span>  theme: <span class="token string">'tomorrow'</span>  line_number: <span class="token boolean">false</span>    <span class="token comment"># default false</span>  custom_css:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>更多代码块优化详细内容请访问：<a href="http://luckyzmj.cn/posts/1b9a9e28.html">http://luckyzmj.cn/posts/1b9a9e28.html</a></p></blockquote><h4 id="2-13-搜索"><a href="#2-13-搜索" class="headerlink" title="2.13 搜索"></a>2.13 搜索</h4><p>本主题中还使用到了 <code>hexo-generator-search</code> 的 <code>Hexo</code> 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>Hexo</code> 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-14-文章字数统计插件（建议安装）"><a href="#2-14-文章字数统计插件（建议安装）" class="headerlink" title="2.14 文章字数统计插件（建议安装）"></a>2.14 文章字数统计插件（建议安装）</h4><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <code>hexo-wordcount</code> 插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">postInfo:  date: <span class="token boolean">true</span>  update: <span class="token boolean">false</span>  wordCount: <span class="token boolean">false</span> <span class="token comment"># 设置文章字数统计为 true.</span>  totalCount: <span class="token boolean">false</span> <span class="token comment"># 设置站点文章总字数统计为 true.</span>  min2read: <span class="token boolean">false</span> <span class="token comment"># 阅读时长.</span>  readCount: <span class="token boolean">false</span> <span class="token comment"># 阅读次数.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-15-添加emoji表情支持（可选的）"><a href="#2-15-添加emoji表情支持（可选的）" class="headerlink" title="2.15 添加emoji表情支持（可选的）"></a>2.15 添加emoji表情支持（可选的）</h4><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <code>hexo-filter-github-emojis</code> 的 <code>Hexo</code> 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown</code> <code>emoji</code>语法（::,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>Hexo</code> 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">githubEmojis:  enable: <span class="token boolean">true</span>  className: github-emoji  inject: <span class="token boolean">true</span>  styles:  customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-16-添加-RSS-订阅支持（可选的）"><a href="#2-16-添加-RSS-订阅支持（可选的）" class="headerlink" title="2.16 添加 RSS 订阅支持（可选的）"></a>2.16 添加 RSS 订阅支持（可选的）</h4><p>本主题中还使用到了<code>hexo-generator-feed</code>  的 <code>Hexo</code> 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>Hexo</code> 根目录下的<code> _config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">feed:  type: atom  path: atom.xml  limit: <span class="token number">20</span>  hub:  content:  content_limit: <span class="token number">140</span>  content_limit_delim: <span class="token string">' '</span>  order_by: -date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean</code> &amp;&amp; <code>hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h4 id="2-17-添加-DaoVoice-在线聊天功能（可选的）"><a href="#2-17-添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="2.17 添加 DaoVoice 在线聊天功能（可选的）"></a>2.17 添加 DaoVoice 在线聊天功能（可选的）</h4><p>前往 <code>DaoVoice</code> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h4 id="2-18-添加-Tidio-在线聊天功能（可选的）"><a href="#2-18-添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="2.18 添加 Tidio 在线聊天功能（可选的）"></a>2.18 添加 Tidio 在线聊天功能（可选的）</h4><p>前往 <code>Tidio</code> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h4 id="2-19-修改页脚"><a href="#2-19-修改页脚" class="headerlink" title="2.19 修改页脚"></a>2.19 修改页脚</h4><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h4 id="2-20-修改社交链接"><a href="#2-20-修改社交链接" class="headerlink" title="2.20 修改社交链接"></a>2.20 修改社交链接</h4><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;% if (theme.socialLink.github) { %&gt;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= theme.socialLink.github %&gt;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <code>Font Awesome</code> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: fab fa-facebook</li><li>Twitter: fab fa-twitter</li><li>Google-plus: fab fa-google-plus</li><li>Linkedin: fab fa-linkedin</li><li>Tumblr: fab fa-tumblr</li><li>Medium: fab fa-medium</li><li>Slack: fab fa-slack</li><li>Sina Weibo: fab fa-weibo</li><li>Wechat: fab fa-weixin</li><li>QQ: fab fa-qq</li><li>Zhihu: fab fa-zhihu</li></ul><p>注意: 本主题中使用的 <code>Font Awesome</code> 版本为 5.11.0。</p><h4 id="2-21-修改打赏的二维码图片"><a href="#2-21-修改打赏的二维码图片" class="headerlink" title="2.21 修改打赏的二维码图片"></a>2.21 修改打赏的二维码图片</h4><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h4 id="2-22-配置音乐播放器（可选的）"><a href="#2-22-配置音乐播放器（可选的）" class="headerlink" title="2.22 配置音乐播放器（可选的）"></a>2.22 配置音乐播放器（可选的）</h4><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活<code>music</code>配置即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 是否在首页显示音乐</span>music:  enable: <span class="token boolean">true</span>  title:         <span class="token comment">#非吸底模式有效</span>    enable: <span class="token boolean">true</span>    show: 听听音乐  server: netease   <span class="token comment">#require music platform: netease, tencent, kugou, xiami, baidu</span>  type: playlist    <span class="token comment">#require song, playlist, album, search, artist</span>  id: <span class="token number">503838841</span>     <span class="token comment">#require song id / playlist id / album id / search keyword</span>  fixed: <span class="token boolean">false</span>      <span class="token comment"># 开启吸底模式</span>  autoplay: <span class="token boolean">false</span>   <span class="token comment"># 是否自动播放</span>  theme: <span class="token string">'#42b983'</span>  loop: <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  order: <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  preload: <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  volume: <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  listFolded: <span class="token boolean">true</span>  <span class="token comment"># 列表默认折叠</span>提示：    server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。    type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）    id获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，playlist的id即为这串数字。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-23文章-Front-matter-介绍"><a href="#2-23文章-Front-matter-介绍" class="headerlink" title="2.23文章 Front-matter 介绍"></a>2.23文章 Front-matter 介绍</h4><p><code>Front-matter</code> 选项中的所有内容均为非必填的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>Markdown 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 _config.yml 中的 author</td><td>文章作者</td></tr><tr><td>img</td><td>featureImages 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td>true</td><td>推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td>cover</td><td>false</td><td>v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td>v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td>true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td>mathjax</td><td>false</td><td>是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">注意:    如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。    <span class="token function">date</span> 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 <span class="token function">id</span> 是通过 <span class="token function">date</span> 的值来作为唯一标识的。    如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。    您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下为文章的 <code>Front-matter</code> 示例。<br>最简示例</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: typora-vue-theme主题介绍date: <span class="token number">2018</span>-09-07 09:25:00---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最全示例</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: theme主题介绍date: <span class="token number">2018</span>-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: <span class="token boolean">true</span>cover: <span class="token boolean">true</span>coverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: <span class="token boolean">false</span>mathjax: <span class="token boolean">false</span>summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-24-自定制修改"><a href="#2-24-自定制修改" class="headerlink" title="2.24 自定制修改"></a>2.24 自定制修改</h4><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li>favicon 和 Logo</li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li>Gitalk、Gitment、Valine 和 disqus 评论配置</li><li>不蒜子统计和谷歌分析（Google Analytics）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图</li></ul><p>我认为个人博客应该都有自己的风格和特色。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 _config.yml 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：<br>修改主题颜色</p><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector">.bg-color</span> <span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 0%<span class="token punctuation">,</span> #0f9d58 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token selector">body</span> <span class="token punctuation">{</span>    <span class="token comment">/* background-color: #eaeaea; */</span>    <span class="token comment">/* 增加背景壁纸*/</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"http://luckyzmj.cn/img/yun.jpg"</span><span class="token punctuation">)</span></span> 0px 0px<span class="token punctuation">;</span>    <span class="token property">background-attachment</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #34495e<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-25-修改-banner-图和文章特色图"><a href="#2-25-修改-banner-图和文章特色图" class="headerlink" title="2.25 修改 banner 图和文章特色图"></a>2.25 修改 banner 图和文章特色图</h4><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 7 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，banner 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">$<span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span>.<span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> + new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>.<span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> + <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h4 id="2-26-优化目录栏"><a href="#2-26-优化目录栏" class="headerlink" title="2.26 优化目录栏"></a>2.26 优化目录栏</h4><p>在 <code>themes\Matery\layout\_partial\post-detail-toc.ejs</code>，修改内容如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.toc-widget</span> <span class="token punctuation">{</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 345px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 10px 35px 2px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .15<span class="token punctuation">)</span><span class="token punctuation">,</span> 0 5px 15px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .07<span class="token punctuation">)</span><span class="token punctuation">,</span> 0 2px 5px -5px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .1<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">#toc-content</span> <span class="token punctuation">{</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x005-更多详细教程"><a href="#0x005-更多详细教程" class="headerlink" title="0x005 更多详细教程"></a>0x005 更多详细教程</h2><p>以下几篇文章都是基于<code>Hexo</code>框架和<code>hexo-theme-matery</code>主题优化的教程，大家如果遇到问题，可以参考其中的方法。</p><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery作者教程</a></li><li><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github搭建博客(超级详细版，精细入微)</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/106278206">hexo（matery）背景、滚动条优化+增加点击跳评论</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Luckey博客篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 转载 </tag>
            
            <tag> 博客 </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
